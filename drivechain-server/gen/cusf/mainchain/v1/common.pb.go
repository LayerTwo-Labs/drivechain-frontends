// Common message types

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: cusf/mainchain/v1/common.proto

package mainchainv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / Consensus-encoded hex
type ConsensusHex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ConsensusHex) Reset() {
	*x = ConsensusHex{}
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusHex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusHex) ProtoMessage() {}

func (x *ConsensusHex) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusHex.ProtoReflect.Descriptor instead.
func (*ConsensusHex) Descriptor() ([]byte, []int) {
	return file_cusf_mainchain_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *ConsensusHex) GetHex() *wrapperspb.StringValue {
	if x != nil {
		return x.Hex
	}
	return nil
}

// / Reverse-encoded hex
type ReverseHex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ReverseHex) Reset() {
	*x = ReverseHex{}
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseHex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseHex) ProtoMessage() {}

func (x *ReverseHex) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseHex.ProtoReflect.Descriptor instead.
func (*ReverseHex) Descriptor() ([]byte, []int) {
	return file_cusf_mainchain_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *ReverseHex) GetHex() *wrapperspb.StringValue {
	if x != nil {
		return x.Hex
	}
	return nil
}

var File_cusf_mainchain_v1_common_proto protoreflect.FileDescriptor

var file_cusf_mainchain_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x48, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03,
	0x68, 0x65, 0x78, 0x22, 0x3c, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48, 0x65,
	0x78, 0x12, 0x2e, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x68, 0x65,
	0x78, 0x42, 0xe1, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x2d,
	0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x73, 0x61, 0x69, 0x6c, 0x2f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x4d, 0x58, 0xaa, 0x02, 0x11, 0x43, 0x75, 0x73, 0x66, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x43, 0x75,
	0x73, 0x66, 0x5c, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1d, 0x43, 0x75, 0x73, 0x66, 0x5c, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x13, 0x43, 0x75, 0x73, 0x66, 0x3a, 0x3a, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cusf_mainchain_v1_common_proto_rawDescOnce sync.Once
	file_cusf_mainchain_v1_common_proto_rawDescData = file_cusf_mainchain_v1_common_proto_rawDesc
)

func file_cusf_mainchain_v1_common_proto_rawDescGZIP() []byte {
	file_cusf_mainchain_v1_common_proto_rawDescOnce.Do(func() {
		file_cusf_mainchain_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_cusf_mainchain_v1_common_proto_rawDescData)
	})
	return file_cusf_mainchain_v1_common_proto_rawDescData
}

var file_cusf_mainchain_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cusf_mainchain_v1_common_proto_goTypes = []any{
	(*ConsensusHex)(nil),           // 0: cusf.mainchain.v1.ConsensusHex
	(*ReverseHex)(nil),             // 1: cusf.mainchain.v1.ReverseHex
	(*wrapperspb.StringValue)(nil), // 2: google.protobuf.StringValue
}
var file_cusf_mainchain_v1_common_proto_depIdxs = []int32{
	2, // 0: cusf.mainchain.v1.ConsensusHex.hex:type_name -> google.protobuf.StringValue
	2, // 1: cusf.mainchain.v1.ReverseHex.hex:type_name -> google.protobuf.StringValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cusf_mainchain_v1_common_proto_init() }
func file_cusf_mainchain_v1_common_proto_init() {
	if File_cusf_mainchain_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cusf_mainchain_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cusf_mainchain_v1_common_proto_goTypes,
		DependencyIndexes: file_cusf_mainchain_v1_common_proto_depIdxs,
		MessageInfos:      file_cusf_mainchain_v1_common_proto_msgTypes,
	}.Build()
	File_cusf_mainchain_v1_common_proto = out.File
	file_cusf_mainchain_v1_common_proto_rawDesc = nil
	file_cusf_mainchain_v1_common_proto_goTypes = nil
	file_cusf_mainchain_v1_common_proto_depIdxs = nil
}
