build-go:
    go build -o drivechain-server .

build: build-bdk-cli build-enforcer build-go

clean:
    rm -rf ./bdk/bin
    go clean

lint:
    golangci-lint run ./...

gen: gen-server gen-enforcer

gen-server:
    buf generate

gen-enforcer:
    mkdir -p proto/enforcer
    curl -o proto/enforcer/enforcer.proto https://raw.githubusercontent.com/LayerTwo-Labs/bip300301_enforcer/refs/heads/master/proto/validator.proto
    buf generate --path=proto/enforcer --template buf.gen.enforcer.yaml
    rm -r proto/enforcer

build-bdk-cli:
    #!/usr/bin/env bash
    set -euo pipefail
    if [ ! -f "./bdk/bin/bdk-cli" ]; then
        echo "Building bdk-cli..."
        mkdir -p ./bin
        if ! command -v rustc &> /dev/null; then
            echo "Error: Rust is not installed. Please install Rust and try again."
            exit 1
        fi
        cargo install \
        --git https://github.com/bitcoindevkit/bdk-cli.git \
        --tag v0.27.1 \
        --root ./bdk \
        --no-default-features \
        --features=key-value-db,compiler,electrum
        echo "bdk-cli has been built to ./bdk/bin/bdk-cli"
    else
        echo "bdk-cli already exists, skipping build"
    fi

build-enforcer:
    #!/usr/bin/env bash
    set -euo pipefail
    if [ ! -f "./enforcer/bin/bip300301_enforcer" ]; then
        echo "Building enforcer..."
        mkdir -p ./enforcer/bin
        if ! command -v rustc &> /dev/null; then
            echo "Error: Rust is not installed. Please install Rust and try again."
            exit 1
        fi
        cargo install \
        --git https://github.com/LayerTwo-Labs/bip300301_enforcer.git \
        --branch master \
        --root ./enforcer \
        --bin bip300301_enforcer
        echo "enforcer has been built to ./enforcer/bin/bip300301_enforcer"
    else
        echo "enforcer already exists, skipping build"
    fi
