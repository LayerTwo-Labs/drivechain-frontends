// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bitcoind/v1/bitcoind.proto

package bitcoindv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBlocksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartHeight   uint32                 `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"` // Start from this height (0 means latest)
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`          // How many blocks to return (0 means default 50)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBlocksRequest) Reset() {
	*x = ListBlocksRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlocksRequest) ProtoMessage() {}

func (x *ListBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlocksRequest.ProtoReflect.Descriptor instead.
func (*ListBlocksRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{0}
}

func (x *ListBlocksRequest) GetStartHeight() uint32 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *ListBlocksRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Block struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BlockTime         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	Height            uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Hash              string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Confirmations     int32                  `protobuf:"varint,4,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Version           int32                  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	VersionHex        string                 `protobuf:"bytes,6,opt,name=version_hex,json=versionHex,proto3" json:"version_hex,omitempty"`
	MerkleRoot        string                 `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Nonce             uint32                 `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Bits              string                 `protobuf:"bytes,9,opt,name=bits,proto3" json:"bits,omitempty"`
	Difficulty        float64                `protobuf:"fixed64,10,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	PreviousBlockHash string                 `protobuf:"bytes,11,opt,name=previous_block_hash,json=previousBlockHash,proto3" json:"previous_block_hash,omitempty"`
	NextBlockHash     string                 `protobuf:"bytes,12,opt,name=next_block_hash,json=nextBlockHash,proto3" json:"next_block_hash,omitempty"`
	StrippedSize      int32                  `protobuf:"varint,13,opt,name=stripped_size,json=strippedSize,proto3" json:"stripped_size,omitempty"`
	Size              int32                  `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"`
	Weight            int32                  `protobuf:"varint,15,opt,name=weight,proto3" json:"weight,omitempty"`
	Txids             []string               `protobuf:"bytes,16,rep,name=txids,proto3" json:"txids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *Block) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Block) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *Block) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Block) GetVersionHex() string {
	if x != nil {
		return x.VersionHex
	}
	return ""
}

func (x *Block) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *Block) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Block) GetBits() string {
	if x != nil {
		return x.Bits
	}
	return ""
}

func (x *Block) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Block) GetPreviousBlockHash() string {
	if x != nil {
		return x.PreviousBlockHash
	}
	return ""
}

func (x *Block) GetNextBlockHash() string {
	if x != nil {
		return x.NextBlockHash
	}
	return ""
}

func (x *Block) GetStrippedSize() int32 {
	if x != nil {
		return x.StrippedSize
	}
	return 0
}

func (x *Block) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Block) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Block) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

type ListBlocksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecentBlocks  []*Block               `protobuf:"bytes,4,rep,name=recent_blocks,json=recentBlocks,proto3" json:"recent_blocks,omitempty"`
	HasMore       bool                   `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"` // Whether there are more blocks available
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBlocksResponse) Reset() {
	*x = ListBlocksResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlocksResponse) ProtoMessage() {}

func (x *ListBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlocksResponse.ProtoReflect.Descriptor instead.
func (*ListBlocksResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{2}
}

func (x *ListBlocksResponse) GetRecentBlocks() []*Block {
	if x != nil {
		return x.RecentBlocks
	}
	return nil
}

func (x *ListBlocksResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ListRecentTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecentTransactionsRequest) Reset() {
	*x = ListRecentTransactionsRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecentTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentTransactionsRequest) ProtoMessage() {}

func (x *ListRecentTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListRecentTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{3}
}

func (x *ListRecentTransactionsRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListRecentTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*RecentTransaction   `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecentTransactionsResponse) Reset() {
	*x = ListRecentTransactionsResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecentTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentTransactionsResponse) ProtoMessage() {}

func (x *ListRecentTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListRecentTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{4}
}

func (x *ListRecentTransactionsResponse) GetTransactions() []*RecentTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type RecentTransaction struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	VirtualSize      uint32                 `protobuf:"varint,1,opt,name=virtual_size,json=virtualSize,proto3" json:"virtual_size,omitempty"`
	Time             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Txid             string                 `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	FeeSats          uint64                 `protobuf:"varint,4,opt,name=fee_sats,json=feeSats,proto3" json:"fee_sats,omitempty"`
	ConfirmedInBlock *Block                 `protobuf:"bytes,5,opt,name=confirmed_in_block,json=confirmedInBlock,proto3,oneof" json:"confirmed_in_block,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecentTransaction) Reset() {
	*x = RecentTransaction{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecentTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentTransaction) ProtoMessage() {}

func (x *RecentTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentTransaction.ProtoReflect.Descriptor instead.
func (*RecentTransaction) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{5}
}

func (x *RecentTransaction) GetVirtualSize() uint32 {
	if x != nil {
		return x.VirtualSize
	}
	return 0
}

func (x *RecentTransaction) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *RecentTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RecentTransaction) GetFeeSats() uint64 {
	if x != nil {
		return x.FeeSats
	}
	return 0
}

func (x *RecentTransaction) GetConfirmedInBlock() *Block {
	if x != nil {
		return x.ConfirmedInBlock
	}
	return nil
}

type GetBlockchainInfoResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Chain                string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Blocks               uint32                 `protobuf:"varint,2,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Headers              uint32                 `protobuf:"varint,3,opt,name=headers,proto3" json:"headers,omitempty"`
	BestBlockHash        string                 `protobuf:"bytes,4,opt,name=best_block_hash,json=bestBlockHash,proto3" json:"best_block_hash,omitempty"`
	InitialBlockDownload bool                   `protobuf:"varint,8,opt,name=initial_block_download,json=initialBlockDownload,proto3" json:"initial_block_download,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetBlockchainInfoResponse) Reset() {
	*x = GetBlockchainInfoResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockchainInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainInfoResponse) ProtoMessage() {}

func (x *GetBlockchainInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{6}
}

func (x *GetBlockchainInfoResponse) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetBlockchainInfoResponse) GetBlocks() uint32 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *GetBlockchainInfoResponse) GetHeaders() uint32 {
	if x != nil {
		return x.Headers
	}
	return 0
}

func (x *GetBlockchainInfoResponse) GetBestBlockHash() string {
	if x != nil {
		return x.BestBlockHash
	}
	return ""
}

func (x *GetBlockchainInfoResponse) GetInitialBlockDownload() bool {
	if x != nil {
		return x.InitialBlockDownload
	}
	return false
}

type Peer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	SyncedBlocks  int32                  `protobuf:"varint,3,opt,name=synced_blocks,json=syncedBlocks,proto3" json:"synced_blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Peer) Reset() {
	*x = Peer{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{7}
}

func (x *Peer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Peer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Peer) GetSyncedBlocks() int32 {
	if x != nil {
		return x.SyncedBlocks
	}
	return 0
}

type ListPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*Peer                `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{8}
}

func (x *ListPeersResponse) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type EstimateSmartFeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfTarget    int64                  `protobuf:"varint,1,opt,name=conf_target,json=confTarget,proto3" json:"conf_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateSmartFeeRequest) Reset() {
	*x = EstimateSmartFeeRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateSmartFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateSmartFeeRequest) ProtoMessage() {}

func (x *EstimateSmartFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateSmartFeeRequest.ProtoReflect.Descriptor instead.
func (*EstimateSmartFeeRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{9}
}

func (x *EstimateSmartFeeRequest) GetConfTarget() int64 {
	if x != nil {
		return x.ConfTarget
	}
	return 0
}

type EstimateSmartFeeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeeRate       float64                `protobuf:"fixed64,1,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateSmartFeeResponse) Reset() {
	*x = EstimateSmartFeeResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateSmartFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateSmartFeeResponse) ProtoMessage() {}

func (x *EstimateSmartFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateSmartFeeResponse.ProtoReflect.Descriptor instead.
func (*EstimateSmartFeeResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{10}
}

func (x *EstimateSmartFeeResponse) GetFeeRate() float64 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *EstimateSmartFeeResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetRawTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRawTransactionRequest) Reset() {
	*x = GetRawTransactionRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTransactionRequest) ProtoMessage() {}

func (x *GetRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{11}
}

func (x *GetRawTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type RawTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Raw transaction data
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Hex-encoded raw transaction data
	Hex           string `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawTransaction) Reset() {
	*x = RawTransaction{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawTransaction) ProtoMessage() {}

func (x *RawTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawTransaction.ProtoReflect.Descriptor instead.
func (*RawTransaction) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{12}
}

func (x *RawTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RawTransaction) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

// Transaction creation messages
type CreateRawTransactionRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Inputs        []*CreateRawTransactionRequest_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       map[string]float64                   `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // address -> amount
	Locktime      uint32                               `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRawTransactionRequest) Reset() {
	*x = CreateRawTransactionRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionRequest) ProtoMessage() {}

func (x *CreateRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{13}
}

func (x *CreateRawTransactionRequest) GetInputs() []*CreateRawTransactionRequest_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CreateRawTransactionRequest) GetOutputs() map[string]float64 {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CreateRawTransactionRequest) GetLocktime() uint32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

type CreateRawTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            *RawTransaction        `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRawTransactionResponse) Reset() {
	*x = CreateRawTransactionResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionResponse) ProtoMessage() {}

func (x *CreateRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRawTransactionResponse) GetTx() *RawTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type ScriptSig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asm           string                 `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex           string                 `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptSig) Reset() {
	*x = ScriptSig{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptSig) ProtoMessage() {}

func (x *ScriptSig) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptSig.ProtoReflect.Descriptor instead.
func (*ScriptSig) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{15}
}

func (x *ScriptSig) GetAsm() string {
	if x != nil {
		return x.Asm
	}
	return ""
}

func (x *ScriptSig) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Coinbase      string                 `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	ScriptSig     *ScriptSig             `protobuf:"bytes,4,opt,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
	Sequence      uint32                 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Witness       []string               `protobuf:"bytes,6,rep,name=witness,proto3" json:"witness,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{16}
}

func (x *Input) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Input) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Input) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *Input) GetScriptSig() *ScriptSig {
	if x != nil {
		return x.ScriptSig
	}
	return nil
}

func (x *Input) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Input) GetWitness() []string {
	if x != nil {
		return x.Witness
	}
	return nil
}

type ScriptPubKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptPubKey) Reset() {
	*x = ScriptPubKey{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptPubKey) ProtoMessage() {}

func (x *ScriptPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptPubKey.ProtoReflect.Descriptor instead.
func (*ScriptPubKey) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{17}
}

func (x *ScriptPubKey) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ScriptPubKey) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        float64                `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	ScriptPubKey  *ScriptPubKey          `protobuf:"bytes,3,opt,name=script_pub_key,json=scriptPubKey,proto3" json:"script_pub_key,omitempty"`
	ScriptSig     *ScriptSig             `protobuf:"bytes,4,opt,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{18}
}

func (x *Output) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Output) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Output) GetScriptPubKey() *ScriptPubKey {
	if x != nil {
		return x.ScriptPubKey
	}
	return nil
}

func (x *Output) GetScriptSig() *ScriptSig {
	if x != nil {
		return x.ScriptSig
	}
	return nil
}

type GetRawTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            *RawTransaction        `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Txid          string                 `protobuf:"bytes,8,opt,name=txid,proto3" json:"txid,omitempty"`
	Hash          string                 `protobuf:"bytes,9,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int32                  `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	Vsize         int32                  `protobuf:"varint,11,opt,name=vsize,proto3" json:"vsize,omitempty"`
	Weight        int32                  `protobuf:"varint,12,opt,name=weight,proto3" json:"weight,omitempty"`
	Version       uint32                 `protobuf:"varint,13,opt,name=version,proto3" json:"version,omitempty"`
	Locktime      uint32                 `protobuf:"varint,14,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Inputs        []*Input               `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*Output              `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Blockhash     string                 `protobuf:"bytes,4,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Confirmations uint32                 `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Time          int64                  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Blocktime     int64                  `protobuf:"varint,7,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRawTransactionResponse) Reset() {
	*x = GetRawTransactionResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawTransactionResponse) ProtoMessage() {}

func (x *GetRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{19}
}

func (x *GetRawTransactionResponse) GetTx() *RawTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *GetRawTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetRawTransactionResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetRawTransactionResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRawTransactionResponse) GetVsize() int32 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *GetRawTransactionResponse) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GetRawTransactionResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetRawTransactionResponse) GetLocktime() uint32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

func (x *GetRawTransactionResponse) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *GetRawTransactionResponse) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *GetRawTransactionResponse) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *GetRawTransactionResponse) GetConfirmations() uint32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetRawTransactionResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetRawTransactionResponse) GetBlocktime() int64 {
	if x != nil {
		return x.Blocktime
	}
	return 0
}

type GetBlockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetBlockRequest_Hash
	//	*GetBlockRequest_Height
	Identifier    isGetBlockRequest_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{20}
}

func (x *GetBlockRequest) GetIdentifier() isGetBlockRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetBlockRequest) GetHash() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetBlockRequest_Hash); ok {
			return x.Hash
		}
	}
	return ""
}

func (x *GetBlockRequest) GetHeight() uint32 {
	if x != nil {
		if x, ok := x.Identifier.(*GetBlockRequest_Height); ok {
			return x.Height
		}
	}
	return 0
}

type isGetBlockRequest_Identifier interface {
	isGetBlockRequest_Identifier()
}

type GetBlockRequest_Hash struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type GetBlockRequest_Height struct {
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3,oneof"`
}

func (*GetBlockRequest_Hash) isGetBlockRequest_Identifier() {}

func (*GetBlockRequest_Height) isGetBlockRequest_Identifier() {}

type GetBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{21}
}

func (x *GetBlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type CreateWalletRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisablePrivateKeys bool                   `protobuf:"varint,2,opt,name=disable_private_keys,json=disablePrivateKeys,proto3" json:"disable_private_keys,omitempty"`
	Blank              bool                   `protobuf:"varint,3,opt,name=blank,proto3" json:"blank,omitempty"`
	Passphrase         string                 `protobuf:"bytes,4,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	AvoidReuse         bool                   `protobuf:"varint,5,opt,name=avoid_reuse,json=avoidReuse,proto3" json:"avoid_reuse,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{22}
}

func (x *CreateWalletRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWalletRequest) GetDisablePrivateKeys() bool {
	if x != nil {
		return x.DisablePrivateKeys
	}
	return false
}

func (x *CreateWalletRequest) GetBlank() bool {
	if x != nil {
		return x.Blank
	}
	return false
}

func (x *CreateWalletRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *CreateWalletRequest) GetAvoidReuse() bool {
	if x != nil {
		return x.AvoidReuse
	}
	return false
}

type CreateWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Warning       string                 `protobuf:"bytes,2,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{23}
}

func (x *CreateWalletResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWalletResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type BackupWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Destination   string                 `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupWalletRequest) Reset() {
	*x = BackupWalletRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupWalletRequest) ProtoMessage() {}

func (x *BackupWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupWalletRequest.ProtoReflect.Descriptor instead.
func (*BackupWalletRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{24}
}

func (x *BackupWalletRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *BackupWalletRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type BackupWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupWalletResponse) Reset() {
	*x = BackupWalletResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupWalletResponse) ProtoMessage() {}

func (x *BackupWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupWalletResponse.ProtoReflect.Descriptor instead.
func (*BackupWalletResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{25}
}

type DumpWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DumpWalletRequest) Reset() {
	*x = DumpWalletRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpWalletRequest) ProtoMessage() {}

func (x *DumpWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpWalletRequest.ProtoReflect.Descriptor instead.
func (*DumpWalletRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{26}
}

func (x *DumpWalletRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DumpWalletRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type DumpWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DumpWalletResponse) Reset() {
	*x = DumpWalletResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpWalletResponse) ProtoMessage() {}

func (x *DumpWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpWalletResponse.ProtoReflect.Descriptor instead.
func (*DumpWalletResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{27}
}

func (x *DumpWalletResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ImportWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportWalletRequest) Reset() {
	*x = ImportWalletRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletRequest) ProtoMessage() {}

func (x *ImportWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletRequest.ProtoReflect.Descriptor instead.
func (*ImportWalletRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{28}
}

func (x *ImportWalletRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ImportWalletRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type ImportWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportWalletResponse) Reset() {
	*x = ImportWalletResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletResponse) ProtoMessage() {}

func (x *ImportWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletResponse.ProtoReflect.Descriptor instead.
func (*ImportWalletResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{29}
}

type UnloadWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletName    string                 `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnloadWalletRequest) Reset() {
	*x = UnloadWalletRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadWalletRequest) ProtoMessage() {}

func (x *UnloadWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadWalletRequest.ProtoReflect.Descriptor instead.
func (*UnloadWalletRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{30}
}

func (x *UnloadWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *UnloadWalletRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type UnloadWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnloadWalletResponse) Reset() {
	*x = UnloadWalletResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadWalletResponse) ProtoMessage() {}

func (x *UnloadWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadWalletResponse.ProtoReflect.Descriptor instead.
func (*UnloadWalletResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{31}
}

type DumpPrivKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DumpPrivKeyRequest) Reset() {
	*x = DumpPrivKeyRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpPrivKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpPrivKeyRequest) ProtoMessage() {}

func (x *DumpPrivKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpPrivKeyRequest.ProtoReflect.Descriptor instead.
func (*DumpPrivKeyRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{32}
}

func (x *DumpPrivKeyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DumpPrivKeyRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type DumpPrivKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey    string                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DumpPrivKeyResponse) Reset() {
	*x = DumpPrivKeyResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpPrivKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpPrivKeyResponse) ProtoMessage() {}

func (x *DumpPrivKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpPrivKeyResponse.ProtoReflect.Descriptor instead.
func (*DumpPrivKeyResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{33}
}

func (x *DumpPrivKeyResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type ImportPrivKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey    string                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Rescan        bool                   `protobuf:"varint,3,opt,name=rescan,proto3" json:"rescan,omitempty"`
	Wallet        string                 `protobuf:"bytes,4,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportPrivKeyRequest) Reset() {
	*x = ImportPrivKeyRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPrivKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPrivKeyRequest) ProtoMessage() {}

func (x *ImportPrivKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPrivKeyRequest.ProtoReflect.Descriptor instead.
func (*ImportPrivKeyRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{34}
}

func (x *ImportPrivKeyRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ImportPrivKeyRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ImportPrivKeyRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportPrivKeyRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type ImportPrivKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportPrivKeyResponse) Reset() {
	*x = ImportPrivKeyResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPrivKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPrivKeyResponse) ProtoMessage() {}

func (x *ImportPrivKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPrivKeyResponse.ProtoReflect.Descriptor instead.
func (*ImportPrivKeyResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{35}
}

type ImportAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Rescan        bool                   `protobuf:"varint,3,opt,name=rescan,proto3" json:"rescan,omitempty"`
	Wallet        string                 `protobuf:"bytes,4,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportAddressRequest) Reset() {
	*x = ImportAddressRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAddressRequest) ProtoMessage() {}

func (x *ImportAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAddressRequest.ProtoReflect.Descriptor instead.
func (*ImportAddressRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{36}
}

func (x *ImportAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ImportAddressRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ImportAddressRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportAddressRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type ImportAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportAddressResponse) Reset() {
	*x = ImportAddressResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAddressResponse) ProtoMessage() {}

func (x *ImportAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAddressResponse.ProtoReflect.Descriptor instead.
func (*ImportAddressResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{37}
}

type ImportPubKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pubkey        string                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Rescan        bool                   `protobuf:"varint,2,opt,name=rescan,proto3" json:"rescan,omitempty"`
	Wallet        string                 `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportPubKeyRequest) Reset() {
	*x = ImportPubKeyRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPubKeyRequest) ProtoMessage() {}

func (x *ImportPubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPubKeyRequest.ProtoReflect.Descriptor instead.
func (*ImportPubKeyRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{38}
}

func (x *ImportPubKeyRequest) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *ImportPubKeyRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

func (x *ImportPubKeyRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type ImportPubKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportPubKeyResponse) Reset() {
	*x = ImportPubKeyResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPubKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPubKeyResponse) ProtoMessage() {}

func (x *ImportPubKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPubKeyResponse.ProtoReflect.Descriptor instead.
func (*ImportPubKeyResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{39}
}

type KeyPoolRefillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewSize       uint32                 `protobuf:"varint,1,opt,name=new_size,json=newSize,proto3" json:"new_size,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyPoolRefillRequest) Reset() {
	*x = KeyPoolRefillRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyPoolRefillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPoolRefillRequest) ProtoMessage() {}

func (x *KeyPoolRefillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPoolRefillRequest.ProtoReflect.Descriptor instead.
func (*KeyPoolRefillRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{40}
}

func (x *KeyPoolRefillRequest) GetNewSize() uint32 {
	if x != nil {
		return x.NewSize
	}
	return 0
}

func (x *KeyPoolRefillRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type KeyPoolRefillResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyPoolRefillResponse) Reset() {
	*x = KeyPoolRefillResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyPoolRefillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPoolRefillResponse) ProtoMessage() {}

func (x *KeyPoolRefillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPoolRefillResponse.ProtoReflect.Descriptor instead.
func (*KeyPoolRefillResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{41}
}

type GetAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{42}
}

func (x *GetAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAccountRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type GetAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{43}
}

func (x *GetAccountResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type SetAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Account       string                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Wallet        string                 `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAccountRequest) Reset() {
	*x = SetAccountRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountRequest) ProtoMessage() {}

func (x *SetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountRequest.ProtoReflect.Descriptor instead.
func (*SetAccountRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{44}
}

func (x *SetAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetAccountRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SetAccountRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type SetAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAccountResponse) Reset() {
	*x = SetAccountResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountResponse) ProtoMessage() {}

func (x *SetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountResponse.ProtoReflect.Descriptor instead.
func (*SetAccountResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{45}
}

type GetAddressesByAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressesByAccountRequest) Reset() {
	*x = GetAddressesByAccountRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressesByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressesByAccountRequest) ProtoMessage() {}

func (x *GetAddressesByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressesByAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAddressesByAccountRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{46}
}

func (x *GetAddressesByAccountRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetAddressesByAccountRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type GetAddressesByAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []string               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressesByAccountResponse) Reset() {
	*x = GetAddressesByAccountResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressesByAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressesByAccountResponse) ProtoMessage() {}

func (x *GetAddressesByAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressesByAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAddressesByAccountResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{47}
}

func (x *GetAddressesByAccountResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinConf       int32                  `protobuf:"varint,1,opt,name=min_conf,json=minConf,proto3" json:"min_conf,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{48}
}

func (x *ListAccountsRequest) GetMinConf() int32 {
	if x != nil {
		return x.MinConf
	}
	return 0
}

func (x *ListAccountsRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type ListAccountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      map[string]float64     `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsResponse) Reset() {
	*x = ListAccountsResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsResponse) ProtoMessage() {}

func (x *ListAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{49}
}

func (x *ListAccountsResponse) GetAccounts() map[string]float64 {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AddMultisigAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequiredSigs  int32                  `protobuf:"varint,1,opt,name=required_sigs,json=requiredSigs,proto3" json:"required_sigs,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Wallet        string                 `protobuf:"bytes,4,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMultisigAddressRequest) Reset() {
	*x = AddMultisigAddressRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMultisigAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultisigAddressRequest) ProtoMessage() {}

func (x *AddMultisigAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultisigAddressRequest.ProtoReflect.Descriptor instead.
func (*AddMultisigAddressRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{50}
}

func (x *AddMultisigAddressRequest) GetRequiredSigs() int32 {
	if x != nil {
		return x.RequiredSigs
	}
	return 0
}

func (x *AddMultisigAddressRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *AddMultisigAddressRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AddMultisigAddressRequest) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

type AddMultisigAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMultisigAddressResponse) Reset() {
	*x = AddMultisigAddressResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMultisigAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultisigAddressResponse) ProtoMessage() {}

func (x *AddMultisigAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultisigAddressResponse.ProtoReflect.Descriptor instead.
func (*AddMultisigAddressResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{51}
}

func (x *AddMultisigAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CreateMultisigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequiredSigs  int32                  `protobuf:"varint,1,opt,name=required_sigs,json=requiredSigs,proto3" json:"required_sigs,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMultisigRequest) Reset() {
	*x = CreateMultisigRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMultisigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultisigRequest) ProtoMessage() {}

func (x *CreateMultisigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultisigRequest.ProtoReflect.Descriptor instead.
func (*CreateMultisigRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{52}
}

func (x *CreateMultisigRequest) GetRequiredSigs() int32 {
	if x != nil {
		return x.RequiredSigs
	}
	return 0
}

func (x *CreateMultisigRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CreateMultisigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RedeemScript  string                 `protobuf:"bytes,2,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMultisigResponse) Reset() {
	*x = CreateMultisigResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMultisigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultisigResponse) ProtoMessage() {}

func (x *CreateMultisigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultisigResponse.ProtoReflect.Descriptor instead.
func (*CreateMultisigResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{53}
}

func (x *CreateMultisigResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateMultisigResponse) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

type CreatePsbtRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Inputs        []*CreatePsbtRequest_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       map[string]float64         `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // address -> amount
	Locktime      uint32                     `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Replaceable   bool                       `protobuf:"varint,4,opt,name=replaceable,proto3" json:"replaceable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePsbtRequest) Reset() {
	*x = CreatePsbtRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePsbtRequest) ProtoMessage() {}

func (x *CreatePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePsbtRequest.ProtoReflect.Descriptor instead.
func (*CreatePsbtRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{54}
}

func (x *CreatePsbtRequest) GetInputs() []*CreatePsbtRequest_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CreatePsbtRequest) GetOutputs() map[string]float64 {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CreatePsbtRequest) GetLocktime() uint32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

func (x *CreatePsbtRequest) GetReplaceable() bool {
	if x != nil {
		return x.Replaceable
	}
	return false
}

type CreatePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePsbtResponse) Reset() {
	*x = CreatePsbtResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePsbtResponse) ProtoMessage() {}

func (x *CreatePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePsbtResponse.ProtoReflect.Descriptor instead.
func (*CreatePsbtResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{55}
}

func (x *CreatePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type DecodePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtRequest) Reset() {
	*x = DecodePsbtRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtRequest) ProtoMessage() {}

func (x *DecodePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtRequest.ProtoReflect.Descriptor instead.
func (*DecodePsbtRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{56}
}

func (x *DecodePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type DecodeRawTransactionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Txid  string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Hash  string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// The serialized transaction size
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// The virtual transaction size (differs from
	// 'size' for witness transactions).
	VirtualSize uint32 `protobuf:"varint,4,opt,name=virtual_size,json=virtualSize,proto3" json:"virtual_size,omitempty"`
	// The transaction's weight
	Weight        uint32    `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Version       uint32    `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Locktime      uint32    `protobuf:"varint,7,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Inputs        []*Input  `protobuf:"bytes,8,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*Output `protobuf:"bytes,9,rep,name=outputs,proto3" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeRawTransactionResponse) Reset() {
	*x = DecodeRawTransactionResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRawTransactionResponse) ProtoMessage() {}

func (x *DecodeRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*DecodeRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{57}
}

func (x *DecodeRawTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *DecodeRawTransactionResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DecodeRawTransactionResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DecodeRawTransactionResponse) GetVirtualSize() uint32 {
	if x != nil {
		return x.VirtualSize
	}
	return 0
}

func (x *DecodeRawTransactionResponse) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *DecodeRawTransactionResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DecodeRawTransactionResponse) GetLocktime() uint32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

func (x *DecodeRawTransactionResponse) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DecodeRawTransactionResponse) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type DecodePsbtResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Tx            *DecodeRawTransactionResponse `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Unknown       map[string]string             `protobuf:"bytes,2,rep,name=unknown,proto3" json:"unknown,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Inputs        []*DecodePsbtResponse_Input   `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*DecodePsbtResponse_Output  `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Fee           float64                       `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtResponse) Reset() {
	*x = DecodePsbtResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse) ProtoMessage() {}

func (x *DecodePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58}
}

func (x *DecodePsbtResponse) GetTx() *DecodeRawTransactionResponse {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *DecodePsbtResponse) GetUnknown() map[string]string {
	if x != nil {
		return x.Unknown
	}
	return nil
}

func (x *DecodePsbtResponse) GetInputs() []*DecodePsbtResponse_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DecodePsbtResponse) GetOutputs() []*DecodePsbtResponse_Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *DecodePsbtResponse) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type AnalyzePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzePsbtRequest) Reset() {
	*x = AnalyzePsbtRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtRequest) ProtoMessage() {}

func (x *AnalyzePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtRequest.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{59}
}

func (x *AnalyzePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type AnalyzePsbtResponse struct {
	state            protoimpl.MessageState       `protogen:"open.v1"`
	Inputs           []*AnalyzePsbtResponse_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	EstimatedVsize   float64                      `protobuf:"fixed64,2,opt,name=estimated_vsize,json=estimatedVsize,proto3" json:"estimated_vsize,omitempty"`
	EstimatedFeerate float64                      `protobuf:"fixed64,3,opt,name=estimated_feerate,json=estimatedFeerate,proto3" json:"estimated_feerate,omitempty"`
	Fee              float64                      `protobuf:"fixed64,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Next             string                       `protobuf:"bytes,5,opt,name=next,proto3" json:"next,omitempty"`
	Error            string                       `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AnalyzePsbtResponse) Reset() {
	*x = AnalyzePsbtResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtResponse) ProtoMessage() {}

func (x *AnalyzePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtResponse.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{60}
}

func (x *AnalyzePsbtResponse) GetInputs() []*AnalyzePsbtResponse_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *AnalyzePsbtResponse) GetEstimatedVsize() float64 {
	if x != nil {
		return x.EstimatedVsize
	}
	return 0
}

func (x *AnalyzePsbtResponse) GetEstimatedFeerate() float64 {
	if x != nil {
		return x.EstimatedFeerate
	}
	return 0
}

func (x *AnalyzePsbtResponse) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AnalyzePsbtResponse) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *AnalyzePsbtResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CombinePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbts         []string               `protobuf:"bytes,1,rep,name=psbts,proto3" json:"psbts,omitempty"` // Array of base64 encoded PSBTs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombinePsbtRequest) Reset() {
	*x = CombinePsbtRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombinePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinePsbtRequest) ProtoMessage() {}

func (x *CombinePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinePsbtRequest.ProtoReflect.Descriptor instead.
func (*CombinePsbtRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{61}
}

func (x *CombinePsbtRequest) GetPsbts() []string {
	if x != nil {
		return x.Psbts
	}
	return nil
}

type CombinePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Combined base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombinePsbtResponse) Reset() {
	*x = CombinePsbtResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombinePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinePsbtResponse) ProtoMessage() {}

func (x *CombinePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinePsbtResponse.ProtoReflect.Descriptor instead.
func (*CombinePsbtResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{62}
}

func (x *CombinePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type UtxoUpdatePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`               // Base64 encoded PSBT
	Descriptors   []*Descriptor          `protobuf:"bytes,2,rep,name=descriptors,proto3" json:"descriptors,omitempty"` // Array of descriptors
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UtxoUpdatePsbtRequest) Reset() {
	*x = UtxoUpdatePsbtRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UtxoUpdatePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoUpdatePsbtRequest) ProtoMessage() {}

func (x *UtxoUpdatePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoUpdatePsbtRequest.ProtoReflect.Descriptor instead.
func (*UtxoUpdatePsbtRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{63}
}

func (x *UtxoUpdatePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

func (x *UtxoUpdatePsbtRequest) GetDescriptors() []*Descriptor {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type UtxoUpdatePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Updated base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UtxoUpdatePsbtResponse) Reset() {
	*x = UtxoUpdatePsbtResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UtxoUpdatePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoUpdatePsbtResponse) ProtoMessage() {}

func (x *UtxoUpdatePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoUpdatePsbtResponse.ProtoReflect.Descriptor instead.
func (*UtxoUpdatePsbtResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{64}
}

func (x *UtxoUpdatePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type JoinPsbtsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbts         []string               `protobuf:"bytes,1,rep,name=psbts,proto3" json:"psbts,omitempty"` // Array of base64 encoded PSBTs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinPsbtsRequest) Reset() {
	*x = JoinPsbtsRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinPsbtsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPsbtsRequest) ProtoMessage() {}

func (x *JoinPsbtsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPsbtsRequest.ProtoReflect.Descriptor instead.
func (*JoinPsbtsRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{65}
}

func (x *JoinPsbtsRequest) GetPsbts() []string {
	if x != nil {
		return x.Psbts
	}
	return nil
}

type JoinPsbtsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"` // Joined base64 encoded PSBT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinPsbtsResponse) Reset() {
	*x = JoinPsbtsResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinPsbtsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPsbtsResponse) ProtoMessage() {}

func (x *JoinPsbtsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPsbtsResponse.ProtoReflect.Descriptor instead.
func (*JoinPsbtsResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{66}
}

func (x *JoinPsbtsResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type TestMempoolAcceptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rawtxs        []string               `protobuf:"bytes,1,rep,name=rawtxs,proto3" json:"rawtxs,omitempty"`
	MaxFeeRate    float64                `protobuf:"fixed64,2,opt,name=max_fee_rate,json=maxFeeRate,proto3" json:"max_fee_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMempoolAcceptRequest) Reset() {
	*x = TestMempoolAcceptRequest{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMempoolAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMempoolAcceptRequest) ProtoMessage() {}

func (x *TestMempoolAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMempoolAcceptRequest.ProtoReflect.Descriptor instead.
func (*TestMempoolAcceptRequest) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{67}
}

func (x *TestMempoolAcceptRequest) GetRawtxs() []string {
	if x != nil {
		return x.Rawtxs
	}
	return nil
}

func (x *TestMempoolAcceptRequest) GetMaxFeeRate() float64 {
	if x != nil {
		return x.MaxFeeRate
	}
	return 0
}

type TestMempoolAcceptResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Results       []*TestMempoolAcceptResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMempoolAcceptResponse) Reset() {
	*x = TestMempoolAcceptResponse{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMempoolAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMempoolAcceptResponse) ProtoMessage() {}

func (x *TestMempoolAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMempoolAcceptResponse.ProtoReflect.Descriptor instead.
func (*TestMempoolAcceptResponse) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{68}
}

func (x *TestMempoolAcceptResponse) GetResults() []*TestMempoolAcceptResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

// Add a new message for descriptor range
type DescriptorRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RangeType:
	//
	//	*DescriptorRange_End
	//	*DescriptorRange_Range
	RangeType     isDescriptorRange_RangeType `protobuf_oneof:"range_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescriptorRange) Reset() {
	*x = DescriptorRange{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescriptorRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorRange) ProtoMessage() {}

func (x *DescriptorRange) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorRange.ProtoReflect.Descriptor instead.
func (*DescriptorRange) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{69}
}

func (x *DescriptorRange) GetRangeType() isDescriptorRange_RangeType {
	if x != nil {
		return x.RangeType
	}
	return nil
}

func (x *DescriptorRange) GetEnd() int32 {
	if x != nil {
		if x, ok := x.RangeType.(*DescriptorRange_End); ok {
			return x.End
		}
	}
	return 0
}

func (x *DescriptorRange) GetRange() *Range {
	if x != nil {
		if x, ok := x.RangeType.(*DescriptorRange_Range); ok {
			return x.Range
		}
	}
	return nil
}

type isDescriptorRange_RangeType interface {
	isDescriptorRange_RangeType()
}

type DescriptorRange_End struct {
	End int32 `protobuf:"varint,1,opt,name=end,proto3,oneof"` // Single number for end (begin defaults to 0)
}

type DescriptorRange_Range struct {
	Range *Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"` // Begin and end range
}

func (*DescriptorRange_End) isDescriptorRange_RangeType() {}

func (*DescriptorRange_Range) isDescriptorRange_RangeType() {}

// Add a new message for begin/end range
type Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Begin         int32                  `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End           int32                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{70}
}

func (x *Range) GetBegin() int32 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *Range) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

// Add a new message for descriptor
type Descriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Descriptor_:
	//
	//	*Descriptor_StringDescriptor
	//	*Descriptor_ObjectDescriptor
	Descriptor_   isDescriptor_Descriptor_ `protobuf_oneof:"descriptor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Descriptor) Reset() {
	*x = Descriptor{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Descriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Descriptor) ProtoMessage() {}

func (x *Descriptor) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Descriptor.ProtoReflect.Descriptor instead.
func (*Descriptor) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{71}
}

func (x *Descriptor) GetDescriptor_() isDescriptor_Descriptor_ {
	if x != nil {
		return x.Descriptor_
	}
	return nil
}

func (x *Descriptor) GetStringDescriptor() string {
	if x != nil {
		if x, ok := x.Descriptor_.(*Descriptor_StringDescriptor); ok {
			return x.StringDescriptor
		}
	}
	return ""
}

func (x *Descriptor) GetObjectDescriptor() *DescriptorObject {
	if x != nil {
		if x, ok := x.Descriptor_.(*Descriptor_ObjectDescriptor); ok {
			return x.ObjectDescriptor
		}
	}
	return nil
}

type isDescriptor_Descriptor_ interface {
	isDescriptor_Descriptor_()
}

type Descriptor_StringDescriptor struct {
	StringDescriptor string `protobuf:"bytes,1,opt,name=string_descriptor,json=stringDescriptor,proto3,oneof"` // Plain string descriptor
}

type Descriptor_ObjectDescriptor struct {
	ObjectDescriptor *DescriptorObject `protobuf:"bytes,2,opt,name=object_descriptor,json=objectDescriptor,proto3,oneof"` // Descriptor object with range
}

func (*Descriptor_StringDescriptor) isDescriptor_Descriptor_() {}

func (*Descriptor_ObjectDescriptor) isDescriptor_Descriptor_() {}

// Add a new message for descriptor objects
type DescriptorObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Desc          string                 `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`   // The output descriptor
	Range         *DescriptorRange       `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"` // Optional range, defaults to 1000 if not specified
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescriptorObject) Reset() {
	*x = DescriptorObject{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescriptorObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorObject) ProtoMessage() {}

func (x *DescriptorObject) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorObject.ProtoReflect.Descriptor instead.
func (*DescriptorObject) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{72}
}

func (x *DescriptorObject) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DescriptorObject) GetRange() *DescriptorRange {
	if x != nil {
		return x.Range
	}
	return nil
}

type CreateRawTransactionRequest_Input struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence      uint32                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRawTransactionRequest_Input) Reset() {
	*x = CreateRawTransactionRequest_Input{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRawTransactionRequest_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionRequest_Input) ProtoMessage() {}

func (x *CreateRawTransactionRequest_Input) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionRequest_Input.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionRequest_Input) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CreateRawTransactionRequest_Input) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CreateRawTransactionRequest_Input) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *CreateRawTransactionRequest_Input) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type CreatePsbtRequest_Input struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence      uint32                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePsbtRequest_Input) Reset() {
	*x = CreatePsbtRequest_Input{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePsbtRequest_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePsbtRequest_Input) ProtoMessage() {}

func (x *CreatePsbtRequest_Input) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePsbtRequest_Input.ProtoReflect.Descriptor instead.
func (*CreatePsbtRequest_Input) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{54, 0}
}

func (x *CreatePsbtRequest_Input) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CreatePsbtRequest_Input) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *CreatePsbtRequest_Input) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type DecodePsbtResponse_WitnessUtxo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        float64                `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ScriptPubKey  *ScriptPubKey          `protobuf:"bytes,2,opt,name=script_pub_key,json=scriptPubKey,proto3" json:"script_pub_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtResponse_WitnessUtxo) Reset() {
	*x = DecodePsbtResponse_WitnessUtxo{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse_WitnessUtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse_WitnessUtxo) ProtoMessage() {}

func (x *DecodePsbtResponse_WitnessUtxo) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse_WitnessUtxo.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse_WitnessUtxo) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58, 0}
}

func (x *DecodePsbtResponse_WitnessUtxo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DecodePsbtResponse_WitnessUtxo) GetScriptPubKey() *ScriptPubKey {
	if x != nil {
		return x.ScriptPubKey
	}
	return nil
}

type DecodePsbtResponse_RedeemScript struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asm           string                 `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex           string                 `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtResponse_RedeemScript) Reset() {
	*x = DecodePsbtResponse_RedeemScript{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse_RedeemScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse_RedeemScript) ProtoMessage() {}

func (x *DecodePsbtResponse_RedeemScript) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse_RedeemScript.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse_RedeemScript) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58, 1}
}

func (x *DecodePsbtResponse_RedeemScript) GetAsm() string {
	if x != nil {
		return x.Asm
	}
	return ""
}

func (x *DecodePsbtResponse_RedeemScript) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *DecodePsbtResponse_RedeemScript) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DecodePsbtResponse_Bip32Deriv struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Pubkey            string                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	MasterFingerprint string                 `protobuf:"bytes,2,opt,name=master_fingerprint,json=masterFingerprint,proto3" json:"master_fingerprint,omitempty"`
	Path              string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DecodePsbtResponse_Bip32Deriv) Reset() {
	*x = DecodePsbtResponse_Bip32Deriv{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse_Bip32Deriv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse_Bip32Deriv) ProtoMessage() {}

func (x *DecodePsbtResponse_Bip32Deriv) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse_Bip32Deriv.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse_Bip32Deriv) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58, 2}
}

func (x *DecodePsbtResponse_Bip32Deriv) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *DecodePsbtResponse_Bip32Deriv) GetMasterFingerprint() string {
	if x != nil {
		return x.MasterFingerprint
	}
	return ""
}

func (x *DecodePsbtResponse_Bip32Deriv) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DecodePsbtResponse_Input struct {
	state              protoimpl.MessageState           `protogen:"open.v1"`
	NonWitnessUtxo     *DecodeRawTransactionResponse    `protobuf:"bytes,1,opt,name=non_witness_utxo,json=nonWitnessUtxo,proto3" json:"non_witness_utxo,omitempty"`
	WitnessUtxo        *DecodePsbtResponse_WitnessUtxo  `protobuf:"bytes,2,opt,name=witness_utxo,json=witnessUtxo,proto3" json:"witness_utxo,omitempty"`
	PartialSignatures  map[string]string                `protobuf:"bytes,3,rep,name=partial_signatures,json=partialSignatures,proto3" json:"partial_signatures,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sighash            string                           `protobuf:"bytes,4,opt,name=sighash,proto3" json:"sighash,omitempty"`
	RedeemScript       *DecodePsbtResponse_RedeemScript `protobuf:"bytes,5,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript      *DecodePsbtResponse_RedeemScript `protobuf:"bytes,6,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Bip32Derivs        []*DecodePsbtResponse_Bip32Deriv `protobuf:"bytes,7,rep,name=bip32_derivs,json=bip32Derivs,proto3" json:"bip32_derivs,omitempty"`
	FinalScriptsig     *ScriptSig                       `protobuf:"bytes,8,opt,name=final_scriptsig,json=finalScriptsig,proto3" json:"final_scriptsig,omitempty"`
	FinalScriptwitness []string                         `protobuf:"bytes,9,rep,name=final_scriptwitness,json=finalScriptwitness,proto3" json:"final_scriptwitness,omitempty"`
	Unknown            map[string]string                `protobuf:"bytes,10,rep,name=unknown,proto3" json:"unknown,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DecodePsbtResponse_Input) Reset() {
	*x = DecodePsbtResponse_Input{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse_Input) ProtoMessage() {}

func (x *DecodePsbtResponse_Input) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse_Input.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse_Input) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58, 3}
}

func (x *DecodePsbtResponse_Input) GetNonWitnessUtxo() *DecodeRawTransactionResponse {
	if x != nil {
		return x.NonWitnessUtxo
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetWitnessUtxo() *DecodePsbtResponse_WitnessUtxo {
	if x != nil {
		return x.WitnessUtxo
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetPartialSignatures() map[string]string {
	if x != nil {
		return x.PartialSignatures
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetSighash() string {
	if x != nil {
		return x.Sighash
	}
	return ""
}

func (x *DecodePsbtResponse_Input) GetRedeemScript() *DecodePsbtResponse_RedeemScript {
	if x != nil {
		return x.RedeemScript
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetWitnessScript() *DecodePsbtResponse_RedeemScript {
	if x != nil {
		return x.WitnessScript
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetBip32Derivs() []*DecodePsbtResponse_Bip32Deriv {
	if x != nil {
		return x.Bip32Derivs
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetFinalScriptsig() *ScriptSig {
	if x != nil {
		return x.FinalScriptsig
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetFinalScriptwitness() []string {
	if x != nil {
		return x.FinalScriptwitness
	}
	return nil
}

func (x *DecodePsbtResponse_Input) GetUnknown() map[string]string {
	if x != nil {
		return x.Unknown
	}
	return nil
}

type DecodePsbtResponse_Output struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	RedeemScript  *DecodePsbtResponse_RedeemScript `protobuf:"bytes,1,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript *DecodePsbtResponse_RedeemScript `protobuf:"bytes,2,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Bip32Derivs   []*DecodePsbtResponse_Bip32Deriv `protobuf:"bytes,3,rep,name=bip32_derivs,json=bip32Derivs,proto3" json:"bip32_derivs,omitempty"`
	Unknown       map[string]string                `protobuf:"bytes,4,rep,name=unknown,proto3" json:"unknown,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtResponse_Output) Reset() {
	*x = DecodePsbtResponse_Output{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse_Output) ProtoMessage() {}

func (x *DecodePsbtResponse_Output) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse_Output.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse_Output) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{58, 4}
}

func (x *DecodePsbtResponse_Output) GetRedeemScript() *DecodePsbtResponse_RedeemScript {
	if x != nil {
		return x.RedeemScript
	}
	return nil
}

func (x *DecodePsbtResponse_Output) GetWitnessScript() *DecodePsbtResponse_RedeemScript {
	if x != nil {
		return x.WitnessScript
	}
	return nil
}

func (x *DecodePsbtResponse_Output) GetBip32Derivs() []*DecodePsbtResponse_Bip32Deriv {
	if x != nil {
		return x.Bip32Derivs
	}
	return nil
}

func (x *DecodePsbtResponse_Output) GetUnknown() map[string]string {
	if x != nil {
		return x.Unknown
	}
	return nil
}

type AnalyzePsbtResponse_Input struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	HasUtxo       bool                               `protobuf:"varint,1,opt,name=has_utxo,json=hasUtxo,proto3" json:"has_utxo,omitempty"`
	IsFinal       bool                               `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Missing       *AnalyzePsbtResponse_Input_Missing `protobuf:"bytes,3,opt,name=missing,proto3" json:"missing,omitempty"`
	Next          string                             `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzePsbtResponse_Input) Reset() {
	*x = AnalyzePsbtResponse_Input{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtResponse_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtResponse_Input) ProtoMessage() {}

func (x *AnalyzePsbtResponse_Input) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtResponse_Input.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtResponse_Input) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{60, 0}
}

func (x *AnalyzePsbtResponse_Input) GetHasUtxo() bool {
	if x != nil {
		return x.HasUtxo
	}
	return false
}

func (x *AnalyzePsbtResponse_Input) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *AnalyzePsbtResponse_Input) GetMissing() *AnalyzePsbtResponse_Input_Missing {
	if x != nil {
		return x.Missing
	}
	return nil
}

func (x *AnalyzePsbtResponse_Input) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

type AnalyzePsbtResponse_Input_Missing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pubkeys       []string               `protobuf:"bytes,1,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	Signatures    []string               `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	RedeemScript  string                 `protobuf:"bytes,3,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript string                 `protobuf:"bytes,4,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzePsbtResponse_Input_Missing) Reset() {
	*x = AnalyzePsbtResponse_Input_Missing{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtResponse_Input_Missing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtResponse_Input_Missing) ProtoMessage() {}

func (x *AnalyzePsbtResponse_Input_Missing) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtResponse_Input_Missing.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtResponse_Input_Missing) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{60, 0, 0}
}

func (x *AnalyzePsbtResponse_Input_Missing) GetPubkeys() []string {
	if x != nil {
		return x.Pubkeys
	}
	return nil
}

func (x *AnalyzePsbtResponse_Input_Missing) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *AnalyzePsbtResponse_Input_Missing) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *AnalyzePsbtResponse_Input_Missing) GetWitnessScript() string {
	if x != nil {
		return x.WitnessScript
	}
	return ""
}

type TestMempoolAcceptResponse_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Allowed       bool                   `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed,omitempty"`
	RejectReason  string                 `protobuf:"bytes,3,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	Vsize         uint32                 `protobuf:"varint,4,opt,name=vsize,proto3" json:"vsize,omitempty"`
	Fees          float64                `protobuf:"fixed64,5,opt,name=fees,proto3" json:"fees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMempoolAcceptResponse_Result) Reset() {
	*x = TestMempoolAcceptResponse_Result{}
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMempoolAcceptResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMempoolAcceptResponse_Result) ProtoMessage() {}

func (x *TestMempoolAcceptResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_bitcoind_v1_bitcoind_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMempoolAcceptResponse_Result.ProtoReflect.Descriptor instead.
func (*TestMempoolAcceptResponse_Result) Descriptor() ([]byte, []int) {
	return file_bitcoind_v1_bitcoind_proto_rawDescGZIP(), []int{68, 0}
}

func (x *TestMempoolAcceptResponse_Result) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TestMempoolAcceptResponse_Result) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *TestMempoolAcceptResponse_Result) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *TestMempoolAcceptResponse_Result) GetVsize() uint32 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *TestMempoolAcceptResponse_Result) GetFees() float64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

var File_bitcoind_v1_bitcoind_proto protoreflect.FileDescriptor

const file_bitcoind_v1_bitcoind_proto_rawDesc = "" +
	"\n" +
	"\x1abitcoind/v1/bitcoind.proto\x12\vbitcoind.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"S\n" +
	"\x11ListBlocksRequest\x12!\n" +
	"\fstart_height\x18\x01 \x01(\rR\vstartHeight\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\"\xf9\x03\n" +
	"\x05Block\x129\n" +
	"\n" +
	"block_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tblockTime\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\tR\x04hash\x12$\n" +
	"\rconfirmations\x18\x04 \x01(\x05R\rconfirmations\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x05R\aversion\x12\x1f\n" +
	"\vversion_hex\x18\x06 \x01(\tR\n" +
	"versionHex\x12\x1f\n" +
	"\vmerkle_root\x18\a \x01(\tR\n" +
	"merkleRoot\x12\x14\n" +
	"\x05nonce\x18\b \x01(\rR\x05nonce\x12\x12\n" +
	"\x04bits\x18\t \x01(\tR\x04bits\x12\x1e\n" +
	"\n" +
	"difficulty\x18\n" +
	" \x01(\x01R\n" +
	"difficulty\x12.\n" +
	"\x13previous_block_hash\x18\v \x01(\tR\x11previousBlockHash\x12&\n" +
	"\x0fnext_block_hash\x18\f \x01(\tR\rnextBlockHash\x12#\n" +
	"\rstripped_size\x18\r \x01(\x05R\fstrippedSize\x12\x12\n" +
	"\x04size\x18\x0e \x01(\x05R\x04size\x12\x16\n" +
	"\x06weight\x18\x0f \x01(\x05R\x06weight\x12\x14\n" +
	"\x05txids\x18\x10 \x03(\tR\x05txids\"h\n" +
	"\x12ListBlocksResponse\x127\n" +
	"\rrecent_blocks\x18\x04 \x03(\v2\x12.bitcoind.v1.BlockR\frecentBlocks\x12\x19\n" +
	"\bhas_more\x18\x05 \x01(\bR\ahasMore\"5\n" +
	"\x1dListRecentTransactionsRequest\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"d\n" +
	"\x1eListRecentTransactionsResponse\x12B\n" +
	"\ftransactions\x18\x01 \x03(\v2\x1e.bitcoind.v1.RecentTransactionR\ftransactions\"\xf3\x01\n" +
	"\x11RecentTransaction\x12!\n" +
	"\fvirtual_size\x18\x01 \x01(\rR\vvirtualSize\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x12\n" +
	"\x04txid\x18\x03 \x01(\tR\x04txid\x12\x19\n" +
	"\bfee_sats\x18\x04 \x01(\x04R\afeeSats\x12E\n" +
	"\x12confirmed_in_block\x18\x05 \x01(\v2\x12.bitcoind.v1.BlockH\x00R\x10confirmedInBlock\x88\x01\x01B\x15\n" +
	"\x13_confirmed_in_block\"\xc1\x01\n" +
	"\x19GetBlockchainInfoResponse\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x16\n" +
	"\x06blocks\x18\x02 \x01(\rR\x06blocks\x12\x18\n" +
	"\aheaders\x18\x03 \x01(\rR\aheaders\x12&\n" +
	"\x0fbest_block_hash\x18\x04 \x01(\tR\rbestBlockHash\x124\n" +
	"\x16initial_block_download\x18\b \x01(\bR\x14initialBlockDownload\"O\n" +
	"\x04Peer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12#\n" +
	"\rsynced_blocks\x18\x03 \x01(\x05R\fsyncedBlocks\"<\n" +
	"\x11ListPeersResponse\x12'\n" +
	"\x05peers\x18\x01 \x03(\v2\x11.bitcoind.v1.PeerR\x05peers\":\n" +
	"\x17EstimateSmartFeeRequest\x12\x1f\n" +
	"\vconf_target\x18\x01 \x01(\x03R\n" +
	"confTarget\"M\n" +
	"\x18EstimateSmartFeeResponse\x12\x19\n" +
	"\bfee_rate\x18\x01 \x01(\x01R\afeeRate\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\".\n" +
	"\x18GetRawTransactionRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"6\n" +
	"\x0eRawTransaction\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x10\n" +
	"\x03hex\x18\x02 \x01(\tR\x03hex\"\xdb\x02\n" +
	"\x1bCreateRawTransactionRequest\x12F\n" +
	"\x06inputs\x18\x01 \x03(\v2..bitcoind.v1.CreateRawTransactionRequest.InputR\x06inputs\x12O\n" +
	"\aoutputs\x18\x02 \x03(\v25.bitcoind.v1.CreateRawTransactionRequest.OutputsEntryR\aoutputs\x12\x1a\n" +
	"\blocktime\x18\x03 \x01(\rR\blocktime\x1aK\n" +
	"\x05Input\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\rR\bsequence\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"K\n" +
	"\x1cCreateRawTransactionResponse\x12+\n" +
	"\x02tx\x18\x01 \x01(\v2\x1b.bitcoind.v1.RawTransactionR\x02tx\"/\n" +
	"\tScriptSig\x12\x10\n" +
	"\x03asm\x18\x01 \x01(\tR\x03asm\x12\x10\n" +
	"\x03hex\x18\x02 \x01(\tR\x03hex\"\xb8\x01\n" +
	"\x05Input\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x1a\n" +
	"\bcoinbase\x18\x03 \x01(\tR\bcoinbase\x125\n" +
	"\n" +
	"script_sig\x18\x04 \x01(\v2\x16.bitcoind.v1.ScriptSigR\tscriptSig\x12\x1a\n" +
	"\bsequence\x18\x05 \x01(\rR\bsequence\x12\x18\n" +
	"\awitness\x18\x06 \x03(\tR\awitness\"<\n" +
	"\fScriptPubKey\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\xac\x01\n" +
	"\x06Output\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x01R\x06amount\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12?\n" +
	"\x0escript_pub_key\x18\x03 \x01(\v2\x19.bitcoind.v1.ScriptPubKeyR\fscriptPubKey\x125\n" +
	"\n" +
	"script_sig\x18\x04 \x01(\v2\x16.bitcoind.v1.ScriptSigR\tscriptSig\"\xb9\x03\n" +
	"\x19GetRawTransactionResponse\x12+\n" +
	"\x02tx\x18\x01 \x01(\v2\x1b.bitcoind.v1.RawTransactionR\x02tx\x12\x12\n" +
	"\x04txid\x18\b \x01(\tR\x04txid\x12\x12\n" +
	"\x04hash\x18\t \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\n" +
	" \x01(\x05R\x04size\x12\x14\n" +
	"\x05vsize\x18\v \x01(\x05R\x05vsize\x12\x16\n" +
	"\x06weight\x18\f \x01(\x05R\x06weight\x12\x18\n" +
	"\aversion\x18\r \x01(\rR\aversion\x12\x1a\n" +
	"\blocktime\x18\x0e \x01(\rR\blocktime\x12*\n" +
	"\x06inputs\x18\x02 \x03(\v2\x12.bitcoind.v1.InputR\x06inputs\x12-\n" +
	"\aoutputs\x18\x03 \x03(\v2\x13.bitcoind.v1.OutputR\aoutputs\x12\x1c\n" +
	"\tblockhash\x18\x04 \x01(\tR\tblockhash\x12$\n" +
	"\rconfirmations\x18\x05 \x01(\rR\rconfirmations\x12\x12\n" +
	"\x04time\x18\x06 \x01(\x03R\x04time\x12\x1c\n" +
	"\tblocktime\x18\a \x01(\x03R\tblocktime\"O\n" +
	"\x0fGetBlockRequest\x12\x14\n" +
	"\x04hash\x18\x01 \x01(\tH\x00R\x04hash\x12\x18\n" +
	"\x06height\x18\x02 \x01(\rH\x00R\x06heightB\f\n" +
	"\n" +
	"identifier\"<\n" +
	"\x10GetBlockResponse\x12(\n" +
	"\x05block\x18\x01 \x01(\v2\x12.bitcoind.v1.BlockR\x05block\"\xb2\x01\n" +
	"\x13CreateWalletRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x14disable_private_keys\x18\x02 \x01(\bR\x12disablePrivateKeys\x12\x14\n" +
	"\x05blank\x18\x03 \x01(\bR\x05blank\x12\x1e\n" +
	"\n" +
	"passphrase\x18\x04 \x01(\tR\n" +
	"passphrase\x12\x1f\n" +
	"\vavoid_reuse\x18\x05 \x01(\bR\n" +
	"avoidReuse\"D\n" +
	"\x14CreateWalletResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\awarning\x18\x02 \x01(\tR\awarning\"O\n" +
	"\x13BackupWalletRequest\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"\x16\n" +
	"\x14BackupWalletResponse\"G\n" +
	"\x11DumpWalletRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"0\n" +
	"\x12DumpWalletResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"I\n" +
	"\x13ImportWalletRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"\x16\n" +
	"\x14ImportWalletResponse\"N\n" +
	"\x13UnloadWalletRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"\x16\n" +
	"\x14UnloadWalletResponse\"F\n" +
	"\x12DumpPrivKeyRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"6\n" +
	"\x13DumpPrivKeyResponse\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\tR\n" +
	"privateKey\"}\n" +
	"\x14ImportPrivKeyRequest\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\tR\n" +
	"privateKey\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x16\n" +
	"\x06rescan\x18\x03 \x01(\bR\x06rescan\x12\x16\n" +
	"\x06wallet\x18\x04 \x01(\tR\x06wallet\"\x17\n" +
	"\x15ImportPrivKeyResponse\"v\n" +
	"\x14ImportAddressRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x16\n" +
	"\x06rescan\x18\x03 \x01(\bR\x06rescan\x12\x16\n" +
	"\x06wallet\x18\x04 \x01(\tR\x06wallet\"\x17\n" +
	"\x15ImportAddressResponse\"]\n" +
	"\x13ImportPubKeyRequest\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\tR\x06pubkey\x12\x16\n" +
	"\x06rescan\x18\x02 \x01(\bR\x06rescan\x12\x16\n" +
	"\x06wallet\x18\x03 \x01(\tR\x06wallet\"\x16\n" +
	"\x14ImportPubKeyResponse\"I\n" +
	"\x14KeyPoolRefillRequest\x12\x19\n" +
	"\bnew_size\x18\x01 \x01(\rR\anewSize\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"\x17\n" +
	"\x15KeyPoolRefillResponse\"E\n" +
	"\x11GetAccountRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\".\n" +
	"\x12GetAccountResponse\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"_\n" +
	"\x11SetAccountRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x18\n" +
	"\aaccount\x18\x02 \x01(\tR\aaccount\x12\x16\n" +
	"\x06wallet\x18\x03 \x01(\tR\x06wallet\"\x14\n" +
	"\x12SetAccountResponse\"P\n" +
	"\x1cGetAddressesByAccountRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"=\n" +
	"\x1dGetAddressesByAccountResponse\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\tR\taddresses\"H\n" +
	"\x13ListAccountsRequest\x12\x19\n" +
	"\bmin_conf\x18\x01 \x01(\x05R\aminConf\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\"\xa0\x01\n" +
	"\x14ListAccountsResponse\x12K\n" +
	"\baccounts\x18\x01 \x03(\v2/.bitcoind.v1.ListAccountsResponse.AccountsEntryR\baccounts\x1a;\n" +
	"\rAccountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x82\x01\n" +
	"\x19AddMultisigAddressRequest\x12#\n" +
	"\rrequired_sigs\x18\x01 \x01(\x05R\frequiredSigs\x12\x12\n" +
	"\x04keys\x18\x02 \x03(\tR\x04keys\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x16\n" +
	"\x06wallet\x18\x04 \x01(\tR\x06wallet\"6\n" +
	"\x1aAddMultisigAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"P\n" +
	"\x15CreateMultisigRequest\x12#\n" +
	"\rrequired_sigs\x18\x01 \x01(\x05R\frequiredSigs\x12\x12\n" +
	"\x04keys\x18\x02 \x03(\tR\x04keys\"W\n" +
	"\x16CreateMultisigResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12#\n" +
	"\rredeem_script\x18\x02 \x01(\tR\fredeemScript\"\xdf\x02\n" +
	"\x11CreatePsbtRequest\x12<\n" +
	"\x06inputs\x18\x01 \x03(\v2$.bitcoind.v1.CreatePsbtRequest.InputR\x06inputs\x12E\n" +
	"\aoutputs\x18\x02 \x03(\v2+.bitcoind.v1.CreatePsbtRequest.OutputsEntryR\aoutputs\x12\x1a\n" +
	"\blocktime\x18\x03 \x01(\rR\blocktime\x12 \n" +
	"\vreplaceable\x18\x04 \x01(\bR\vreplaceable\x1aK\n" +
	"\x05Input\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\rR\bsequence\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"(\n" +
	"\x12CreatePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"'\n" +
	"\x11DecodePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"\xa6\x02\n" +
	"\x1cDecodeRawTransactionResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\x12!\n" +
	"\fvirtual_size\x18\x04 \x01(\rR\vvirtualSize\x12\x16\n" +
	"\x06weight\x18\x05 \x01(\rR\x06weight\x12\x18\n" +
	"\aversion\x18\x06 \x01(\rR\aversion\x12\x1a\n" +
	"\blocktime\x18\a \x01(\rR\blocktime\x12*\n" +
	"\x06inputs\x18\b \x03(\v2\x12.bitcoind.v1.InputR\x06inputs\x12-\n" +
	"\aoutputs\x18\t \x03(\v2\x13.bitcoind.v1.OutputR\aoutputs\"\xfb\x0e\n" +
	"\x12DecodePsbtResponse\x129\n" +
	"\x02tx\x18\x01 \x01(\v2).bitcoind.v1.DecodeRawTransactionResponseR\x02tx\x12F\n" +
	"\aunknown\x18\x02 \x03(\v2,.bitcoind.v1.DecodePsbtResponse.UnknownEntryR\aunknown\x12=\n" +
	"\x06inputs\x18\x03 \x03(\v2%.bitcoind.v1.DecodePsbtResponse.InputR\x06inputs\x12@\n" +
	"\aoutputs\x18\x04 \x03(\v2&.bitcoind.v1.DecodePsbtResponse.OutputR\aoutputs\x12\x10\n" +
	"\x03fee\x18\x05 \x01(\x01R\x03fee\x1af\n" +
	"\vWitnessUtxo\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x01R\x06amount\x12?\n" +
	"\x0escript_pub_key\x18\x02 \x01(\v2\x19.bitcoind.v1.ScriptPubKeyR\fscriptPubKey\x1aF\n" +
	"\fRedeemScript\x12\x10\n" +
	"\x03asm\x18\x01 \x01(\tR\x03asm\x12\x10\n" +
	"\x03hex\x18\x02 \x01(\tR\x03hex\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x1ag\n" +
	"\n" +
	"Bip32Deriv\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\tR\x06pubkey\x12-\n" +
	"\x12master_fingerprint\x18\x02 \x01(\tR\x11masterFingerprint\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x1a\xec\x06\n" +
	"\x05Input\x12S\n" +
	"\x10non_witness_utxo\x18\x01 \x01(\v2).bitcoind.v1.DecodeRawTransactionResponseR\x0enonWitnessUtxo\x12N\n" +
	"\fwitness_utxo\x18\x02 \x01(\v2+.bitcoind.v1.DecodePsbtResponse.WitnessUtxoR\vwitnessUtxo\x12k\n" +
	"\x12partial_signatures\x18\x03 \x03(\v2<.bitcoind.v1.DecodePsbtResponse.Input.PartialSignaturesEntryR\x11partialSignatures\x12\x18\n" +
	"\asighash\x18\x04 \x01(\tR\asighash\x12Q\n" +
	"\rredeem_script\x18\x05 \x01(\v2,.bitcoind.v1.DecodePsbtResponse.RedeemScriptR\fredeemScript\x12S\n" +
	"\x0ewitness_script\x18\x06 \x01(\v2,.bitcoind.v1.DecodePsbtResponse.RedeemScriptR\rwitnessScript\x12M\n" +
	"\fbip32_derivs\x18\a \x03(\v2*.bitcoind.v1.DecodePsbtResponse.Bip32DerivR\vbip32Derivs\x12?\n" +
	"\x0ffinal_scriptsig\x18\b \x01(\v2\x16.bitcoind.v1.ScriptSigR\x0efinalScriptsig\x12/\n" +
	"\x13final_scriptwitness\x18\t \x03(\tR\x12finalScriptwitness\x12L\n" +
	"\aunknown\x18\n" +
	" \x03(\v22.bitcoind.v1.DecodePsbtResponse.Input.UnknownEntryR\aunknown\x1aD\n" +
	"\x16PartialSignaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fUnknownEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x8a\x03\n" +
	"\x06Output\x12Q\n" +
	"\rredeem_script\x18\x01 \x01(\v2,.bitcoind.v1.DecodePsbtResponse.RedeemScriptR\fredeemScript\x12S\n" +
	"\x0ewitness_script\x18\x02 \x01(\v2,.bitcoind.v1.DecodePsbtResponse.RedeemScriptR\rwitnessScript\x12M\n" +
	"\fbip32_derivs\x18\x03 \x03(\v2*.bitcoind.v1.DecodePsbtResponse.Bip32DerivR\vbip32Derivs\x12M\n" +
	"\aunknown\x18\x04 \x03(\v23.bitcoind.v1.DecodePsbtResponse.Output.UnknownEntryR\aunknown\x1a:\n" +
	"\fUnknownEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fUnknownEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"(\n" +
	"\x12AnalyzePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"\x97\x04\n" +
	"\x13AnalyzePsbtResponse\x12>\n" +
	"\x06inputs\x18\x01 \x03(\v2&.bitcoind.v1.AnalyzePsbtResponse.InputR\x06inputs\x12'\n" +
	"\x0festimated_vsize\x18\x02 \x01(\x01R\x0eestimatedVsize\x12+\n" +
	"\x11estimated_feerate\x18\x03 \x01(\x01R\x10estimatedFeerate\x12\x10\n" +
	"\x03fee\x18\x04 \x01(\x01R\x03fee\x12\x12\n" +
	"\x04next\x18\x05 \x01(\tR\x04next\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x1a\xad\x02\n" +
	"\x05Input\x12\x19\n" +
	"\bhas_utxo\x18\x01 \x01(\bR\ahasUtxo\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x12H\n" +
	"\amissing\x18\x03 \x01(\v2..bitcoind.v1.AnalyzePsbtResponse.Input.MissingR\amissing\x12\x12\n" +
	"\x04next\x18\x04 \x01(\tR\x04next\x1a\x8f\x01\n" +
	"\aMissing\x12\x18\n" +
	"\apubkeys\x18\x01 \x03(\tR\apubkeys\x12\x1e\n" +
	"\n" +
	"signatures\x18\x02 \x03(\tR\n" +
	"signatures\x12#\n" +
	"\rredeem_script\x18\x03 \x01(\tR\fredeemScript\x12%\n" +
	"\x0ewitness_script\x18\x04 \x01(\tR\rwitnessScript\"*\n" +
	"\x12CombinePsbtRequest\x12\x14\n" +
	"\x05psbts\x18\x01 \x03(\tR\x05psbts\")\n" +
	"\x13CombinePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"f\n" +
	"\x15UtxoUpdatePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\x129\n" +
	"\vdescriptors\x18\x02 \x03(\v2\x17.bitcoind.v1.DescriptorR\vdescriptors\",\n" +
	"\x16UtxoUpdatePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"(\n" +
	"\x10JoinPsbtsRequest\x12\x14\n" +
	"\x05psbts\x18\x01 \x03(\tR\x05psbts\"'\n" +
	"\x11JoinPsbtsResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"T\n" +
	"\x18TestMempoolAcceptRequest\x12\x16\n" +
	"\x06rawtxs\x18\x01 \x03(\tR\x06rawtxs\x12 \n" +
	"\fmax_fee_rate\x18\x02 \x01(\x01R\n" +
	"maxFeeRate\"\xec\x01\n" +
	"\x19TestMempoolAcceptResponse\x12G\n" +
	"\aresults\x18\x01 \x03(\v2-.bitcoind.v1.TestMempoolAcceptResponse.ResultR\aresults\x1a\x85\x01\n" +
	"\x06Result\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x18\n" +
	"\aallowed\x18\x02 \x01(\bR\aallowed\x12#\n" +
	"\rreject_reason\x18\x03 \x01(\tR\frejectReason\x12\x14\n" +
	"\x05vsize\x18\x04 \x01(\rR\x05vsize\x12\x12\n" +
	"\x04fees\x18\x05 \x01(\x01R\x04fees\"_\n" +
	"\x0fDescriptorRange\x12\x12\n" +
	"\x03end\x18\x01 \x01(\x05H\x00R\x03end\x12*\n" +
	"\x05range\x18\x02 \x01(\v2\x12.bitcoind.v1.RangeH\x00R\x05rangeB\f\n" +
	"\n" +
	"range_type\"/\n" +
	"\x05Range\x12\x14\n" +
	"\x05begin\x18\x01 \x01(\x05R\x05begin\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x05R\x03end\"\x97\x01\n" +
	"\n" +
	"Descriptor\x12-\n" +
	"\x11string_descriptor\x18\x01 \x01(\tH\x00R\x10stringDescriptor\x12L\n" +
	"\x11object_descriptor\x18\x02 \x01(\v2\x1d.bitcoind.v1.DescriptorObjectH\x00R\x10objectDescriptorB\f\n" +
	"\n" +
	"descriptor\"Z\n" +
	"\x10DescriptorObject\x12\x12\n" +
	"\x04desc\x18\x01 \x01(\tR\x04desc\x122\n" +
	"\x05range\x18\x02 \x01(\v2\x1c.bitcoind.v1.DescriptorRangeR\x05range2\xac\x15\n" +
	"\x0fBitcoindService\x12q\n" +
	"\x16ListRecentTransactions\x12*.bitcoind.v1.ListRecentTransactionsRequest\x1a+.bitcoind.v1.ListRecentTransactionsResponse\x12M\n" +
	"\n" +
	"ListBlocks\x12\x1e.bitcoind.v1.ListBlocksRequest\x1a\x1f.bitcoind.v1.ListBlocksResponse\x12G\n" +
	"\bGetBlock\x12\x1c.bitcoind.v1.GetBlockRequest\x1a\x1d.bitcoind.v1.GetBlockResponse\x12S\n" +
	"\x11GetBlockchainInfo\x12\x16.google.protobuf.Empty\x1a&.bitcoind.v1.GetBlockchainInfoResponse\x12C\n" +
	"\tListPeers\x12\x16.google.protobuf.Empty\x1a\x1e.bitcoind.v1.ListPeersResponse\x12_\n" +
	"\x10EstimateSmartFee\x12$.bitcoind.v1.EstimateSmartFeeRequest\x1a%.bitcoind.v1.EstimateSmartFeeResponse\x12b\n" +
	"\x11GetRawTransaction\x12%.bitcoind.v1.GetRawTransactionRequest\x1a&.bitcoind.v1.GetRawTransactionResponse\x12k\n" +
	"\x14CreateRawTransaction\x12(.bitcoind.v1.CreateRawTransactionRequest\x1a).bitcoind.v1.CreateRawTransactionResponse\x12S\n" +
	"\fCreateWallet\x12 .bitcoind.v1.CreateWalletRequest\x1a!.bitcoind.v1.CreateWalletResponse\x12S\n" +
	"\fBackupWallet\x12 .bitcoind.v1.BackupWalletRequest\x1a!.bitcoind.v1.BackupWalletResponse\x12M\n" +
	"\n" +
	"DumpWallet\x12\x1e.bitcoind.v1.DumpWalletRequest\x1a\x1f.bitcoind.v1.DumpWalletResponse\x12S\n" +
	"\fImportWallet\x12 .bitcoind.v1.ImportWalletRequest\x1a!.bitcoind.v1.ImportWalletResponse\x12S\n" +
	"\fUnloadWallet\x12 .bitcoind.v1.UnloadWalletRequest\x1a!.bitcoind.v1.UnloadWalletResponse\x12P\n" +
	"\vDumpPrivKey\x12\x1f.bitcoind.v1.DumpPrivKeyRequest\x1a .bitcoind.v1.DumpPrivKeyResponse\x12V\n" +
	"\rImportPrivKey\x12!.bitcoind.v1.ImportPrivKeyRequest\x1a\".bitcoind.v1.ImportPrivKeyResponse\x12V\n" +
	"\rImportAddress\x12!.bitcoind.v1.ImportAddressRequest\x1a\".bitcoind.v1.ImportAddressResponse\x12S\n" +
	"\fImportPubKey\x12 .bitcoind.v1.ImportPubKeyRequest\x1a!.bitcoind.v1.ImportPubKeyResponse\x12V\n" +
	"\rKeyPoolRefill\x12!.bitcoind.v1.KeyPoolRefillRequest\x1a\".bitcoind.v1.KeyPoolRefillResponse\x12M\n" +
	"\n" +
	"GetAccount\x12\x1e.bitcoind.v1.GetAccountRequest\x1a\x1f.bitcoind.v1.GetAccountResponse\x12M\n" +
	"\n" +
	"SetAccount\x12\x1e.bitcoind.v1.SetAccountRequest\x1a\x1f.bitcoind.v1.SetAccountResponse\x12n\n" +
	"\x15GetAddressesByAccount\x12).bitcoind.v1.GetAddressesByAccountRequest\x1a*.bitcoind.v1.GetAddressesByAccountResponse\x12S\n" +
	"\fListAccounts\x12 .bitcoind.v1.ListAccountsRequest\x1a!.bitcoind.v1.ListAccountsResponse\x12e\n" +
	"\x12AddMultisigAddress\x12&.bitcoind.v1.AddMultisigAddressRequest\x1a'.bitcoind.v1.AddMultisigAddressResponse\x12Y\n" +
	"\x0eCreateMultisig\x12\".bitcoind.v1.CreateMultisigRequest\x1a#.bitcoind.v1.CreateMultisigResponse\x12M\n" +
	"\n" +
	"CreatePsbt\x12\x1e.bitcoind.v1.CreatePsbtRequest\x1a\x1f.bitcoind.v1.CreatePsbtResponse\x12M\n" +
	"\n" +
	"DecodePsbt\x12\x1e.bitcoind.v1.DecodePsbtRequest\x1a\x1f.bitcoind.v1.DecodePsbtResponse\x12P\n" +
	"\vAnalyzePsbt\x12\x1f.bitcoind.v1.AnalyzePsbtRequest\x1a .bitcoind.v1.AnalyzePsbtResponse\x12P\n" +
	"\vCombinePsbt\x12\x1f.bitcoind.v1.CombinePsbtRequest\x1a .bitcoind.v1.CombinePsbtResponse\x12Y\n" +
	"\x0eUtxoUpdatePsbt\x12\".bitcoind.v1.UtxoUpdatePsbtRequest\x1a#.bitcoind.v1.UtxoUpdatePsbtResponse\x12J\n" +
	"\tJoinPsbts\x12\x1d.bitcoind.v1.JoinPsbtsRequest\x1a\x1e.bitcoind.v1.JoinPsbtsResponse\x12b\n" +
	"\x11TestMempoolAccept\x12%.bitcoind.v1.TestMempoolAcceptRequest\x1a&.bitcoind.v1.TestMempoolAcceptResponseB\xbc\x01\n" +
	"\x0fcom.bitcoind.v1B\rBitcoindProtoP\x01ZMgithub.com/LayerTwo-Labs/sidesail/bitwindow/server/gen/bitcoind/v1;bitcoindv1\xa2\x02\x03BXX\xaa\x02\vBitcoind.V1\xca\x02\vBitcoind\\V1\xe2\x02\x17Bitcoind\\V1\\GPBMetadata\xea\x02\fBitcoind::V1b\x06proto3"

var (
	file_bitcoind_v1_bitcoind_proto_rawDescOnce sync.Once
	file_bitcoind_v1_bitcoind_proto_rawDescData []byte
)

func file_bitcoind_v1_bitcoind_proto_rawDescGZIP() []byte {
	file_bitcoind_v1_bitcoind_proto_rawDescOnce.Do(func() {
		file_bitcoind_v1_bitcoind_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bitcoind_v1_bitcoind_proto_rawDesc), len(file_bitcoind_v1_bitcoind_proto_rawDesc)))
	})
	return file_bitcoind_v1_bitcoind_proto_rawDescData
}

var file_bitcoind_v1_bitcoind_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_bitcoind_v1_bitcoind_proto_goTypes = []any{
	(*ListBlocksRequest)(nil),                 // 0: bitcoind.v1.ListBlocksRequest
	(*Block)(nil),                             // 1: bitcoind.v1.Block
	(*ListBlocksResponse)(nil),                // 2: bitcoind.v1.ListBlocksResponse
	(*ListRecentTransactionsRequest)(nil),     // 3: bitcoind.v1.ListRecentTransactionsRequest
	(*ListRecentTransactionsResponse)(nil),    // 4: bitcoind.v1.ListRecentTransactionsResponse
	(*RecentTransaction)(nil),                 // 5: bitcoind.v1.RecentTransaction
	(*GetBlockchainInfoResponse)(nil),         // 6: bitcoind.v1.GetBlockchainInfoResponse
	(*Peer)(nil),                              // 7: bitcoind.v1.Peer
	(*ListPeersResponse)(nil),                 // 8: bitcoind.v1.ListPeersResponse
	(*EstimateSmartFeeRequest)(nil),           // 9: bitcoind.v1.EstimateSmartFeeRequest
	(*EstimateSmartFeeResponse)(nil),          // 10: bitcoind.v1.EstimateSmartFeeResponse
	(*GetRawTransactionRequest)(nil),          // 11: bitcoind.v1.GetRawTransactionRequest
	(*RawTransaction)(nil),                    // 12: bitcoind.v1.RawTransaction
	(*CreateRawTransactionRequest)(nil),       // 13: bitcoind.v1.CreateRawTransactionRequest
	(*CreateRawTransactionResponse)(nil),      // 14: bitcoind.v1.CreateRawTransactionResponse
	(*ScriptSig)(nil),                         // 15: bitcoind.v1.ScriptSig
	(*Input)(nil),                             // 16: bitcoind.v1.Input
	(*ScriptPubKey)(nil),                      // 17: bitcoind.v1.ScriptPubKey
	(*Output)(nil),                            // 18: bitcoind.v1.Output
	(*GetRawTransactionResponse)(nil),         // 19: bitcoind.v1.GetRawTransactionResponse
	(*GetBlockRequest)(nil),                   // 20: bitcoind.v1.GetBlockRequest
	(*GetBlockResponse)(nil),                  // 21: bitcoind.v1.GetBlockResponse
	(*CreateWalletRequest)(nil),               // 22: bitcoind.v1.CreateWalletRequest
	(*CreateWalletResponse)(nil),              // 23: bitcoind.v1.CreateWalletResponse
	(*BackupWalletRequest)(nil),               // 24: bitcoind.v1.BackupWalletRequest
	(*BackupWalletResponse)(nil),              // 25: bitcoind.v1.BackupWalletResponse
	(*DumpWalletRequest)(nil),                 // 26: bitcoind.v1.DumpWalletRequest
	(*DumpWalletResponse)(nil),                // 27: bitcoind.v1.DumpWalletResponse
	(*ImportWalletRequest)(nil),               // 28: bitcoind.v1.ImportWalletRequest
	(*ImportWalletResponse)(nil),              // 29: bitcoind.v1.ImportWalletResponse
	(*UnloadWalletRequest)(nil),               // 30: bitcoind.v1.UnloadWalletRequest
	(*UnloadWalletResponse)(nil),              // 31: bitcoind.v1.UnloadWalletResponse
	(*DumpPrivKeyRequest)(nil),                // 32: bitcoind.v1.DumpPrivKeyRequest
	(*DumpPrivKeyResponse)(nil),               // 33: bitcoind.v1.DumpPrivKeyResponse
	(*ImportPrivKeyRequest)(nil),              // 34: bitcoind.v1.ImportPrivKeyRequest
	(*ImportPrivKeyResponse)(nil),             // 35: bitcoind.v1.ImportPrivKeyResponse
	(*ImportAddressRequest)(nil),              // 36: bitcoind.v1.ImportAddressRequest
	(*ImportAddressResponse)(nil),             // 37: bitcoind.v1.ImportAddressResponse
	(*ImportPubKeyRequest)(nil),               // 38: bitcoind.v1.ImportPubKeyRequest
	(*ImportPubKeyResponse)(nil),              // 39: bitcoind.v1.ImportPubKeyResponse
	(*KeyPoolRefillRequest)(nil),              // 40: bitcoind.v1.KeyPoolRefillRequest
	(*KeyPoolRefillResponse)(nil),             // 41: bitcoind.v1.KeyPoolRefillResponse
	(*GetAccountRequest)(nil),                 // 42: bitcoind.v1.GetAccountRequest
	(*GetAccountResponse)(nil),                // 43: bitcoind.v1.GetAccountResponse
	(*SetAccountRequest)(nil),                 // 44: bitcoind.v1.SetAccountRequest
	(*SetAccountResponse)(nil),                // 45: bitcoind.v1.SetAccountResponse
	(*GetAddressesByAccountRequest)(nil),      // 46: bitcoind.v1.GetAddressesByAccountRequest
	(*GetAddressesByAccountResponse)(nil),     // 47: bitcoind.v1.GetAddressesByAccountResponse
	(*ListAccountsRequest)(nil),               // 48: bitcoind.v1.ListAccountsRequest
	(*ListAccountsResponse)(nil),              // 49: bitcoind.v1.ListAccountsResponse
	(*AddMultisigAddressRequest)(nil),         // 50: bitcoind.v1.AddMultisigAddressRequest
	(*AddMultisigAddressResponse)(nil),        // 51: bitcoind.v1.AddMultisigAddressResponse
	(*CreateMultisigRequest)(nil),             // 52: bitcoind.v1.CreateMultisigRequest
	(*CreateMultisigResponse)(nil),            // 53: bitcoind.v1.CreateMultisigResponse
	(*CreatePsbtRequest)(nil),                 // 54: bitcoind.v1.CreatePsbtRequest
	(*CreatePsbtResponse)(nil),                // 55: bitcoind.v1.CreatePsbtResponse
	(*DecodePsbtRequest)(nil),                 // 56: bitcoind.v1.DecodePsbtRequest
	(*DecodeRawTransactionResponse)(nil),      // 57: bitcoind.v1.DecodeRawTransactionResponse
	(*DecodePsbtResponse)(nil),                // 58: bitcoind.v1.DecodePsbtResponse
	(*AnalyzePsbtRequest)(nil),                // 59: bitcoind.v1.AnalyzePsbtRequest
	(*AnalyzePsbtResponse)(nil),               // 60: bitcoind.v1.AnalyzePsbtResponse
	(*CombinePsbtRequest)(nil),                // 61: bitcoind.v1.CombinePsbtRequest
	(*CombinePsbtResponse)(nil),               // 62: bitcoind.v1.CombinePsbtResponse
	(*UtxoUpdatePsbtRequest)(nil),             // 63: bitcoind.v1.UtxoUpdatePsbtRequest
	(*UtxoUpdatePsbtResponse)(nil),            // 64: bitcoind.v1.UtxoUpdatePsbtResponse
	(*JoinPsbtsRequest)(nil),                  // 65: bitcoind.v1.JoinPsbtsRequest
	(*JoinPsbtsResponse)(nil),                 // 66: bitcoind.v1.JoinPsbtsResponse
	(*TestMempoolAcceptRequest)(nil),          // 67: bitcoind.v1.TestMempoolAcceptRequest
	(*TestMempoolAcceptResponse)(nil),         // 68: bitcoind.v1.TestMempoolAcceptResponse
	(*DescriptorRange)(nil),                   // 69: bitcoind.v1.DescriptorRange
	(*Range)(nil),                             // 70: bitcoind.v1.Range
	(*Descriptor)(nil),                        // 71: bitcoind.v1.Descriptor
	(*DescriptorObject)(nil),                  // 72: bitcoind.v1.DescriptorObject
	(*CreateRawTransactionRequest_Input)(nil), // 73: bitcoind.v1.CreateRawTransactionRequest.Input
	nil,                                     // 74: bitcoind.v1.CreateRawTransactionRequest.OutputsEntry
	nil,                                     // 75: bitcoind.v1.ListAccountsResponse.AccountsEntry
	(*CreatePsbtRequest_Input)(nil),         // 76: bitcoind.v1.CreatePsbtRequest.Input
	nil,                                     // 77: bitcoind.v1.CreatePsbtRequest.OutputsEntry
	(*DecodePsbtResponse_WitnessUtxo)(nil),  // 78: bitcoind.v1.DecodePsbtResponse.WitnessUtxo
	(*DecodePsbtResponse_RedeemScript)(nil), // 79: bitcoind.v1.DecodePsbtResponse.RedeemScript
	(*DecodePsbtResponse_Bip32Deriv)(nil),   // 80: bitcoind.v1.DecodePsbtResponse.Bip32Deriv
	(*DecodePsbtResponse_Input)(nil),        // 81: bitcoind.v1.DecodePsbtResponse.Input
	(*DecodePsbtResponse_Output)(nil),       // 82: bitcoind.v1.DecodePsbtResponse.Output
	nil,                                     // 83: bitcoind.v1.DecodePsbtResponse.UnknownEntry
	nil,                                     // 84: bitcoind.v1.DecodePsbtResponse.Input.PartialSignaturesEntry
	nil,                                     // 85: bitcoind.v1.DecodePsbtResponse.Input.UnknownEntry
	nil,                                     // 86: bitcoind.v1.DecodePsbtResponse.Output.UnknownEntry
	(*AnalyzePsbtResponse_Input)(nil),       // 87: bitcoind.v1.AnalyzePsbtResponse.Input
	(*AnalyzePsbtResponse_Input_Missing)(nil), // 88: bitcoind.v1.AnalyzePsbtResponse.Input.Missing
	(*TestMempoolAcceptResponse_Result)(nil),  // 89: bitcoind.v1.TestMempoolAcceptResponse.Result
	(*timestamppb.Timestamp)(nil),             // 90: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 91: google.protobuf.Empty
}
var file_bitcoind_v1_bitcoind_proto_depIdxs = []int32{
	90, // 0: bitcoind.v1.Block.block_time:type_name -> google.protobuf.Timestamp
	1,  // 1: bitcoind.v1.ListBlocksResponse.recent_blocks:type_name -> bitcoind.v1.Block
	5,  // 2: bitcoind.v1.ListRecentTransactionsResponse.transactions:type_name -> bitcoind.v1.RecentTransaction
	90, // 3: bitcoind.v1.RecentTransaction.time:type_name -> google.protobuf.Timestamp
	1,  // 4: bitcoind.v1.RecentTransaction.confirmed_in_block:type_name -> bitcoind.v1.Block
	7,  // 5: bitcoind.v1.ListPeersResponse.peers:type_name -> bitcoind.v1.Peer
	73, // 6: bitcoind.v1.CreateRawTransactionRequest.inputs:type_name -> bitcoind.v1.CreateRawTransactionRequest.Input
	74, // 7: bitcoind.v1.CreateRawTransactionRequest.outputs:type_name -> bitcoind.v1.CreateRawTransactionRequest.OutputsEntry
	12, // 8: bitcoind.v1.CreateRawTransactionResponse.tx:type_name -> bitcoind.v1.RawTransaction
	15, // 9: bitcoind.v1.Input.script_sig:type_name -> bitcoind.v1.ScriptSig
	17, // 10: bitcoind.v1.Output.script_pub_key:type_name -> bitcoind.v1.ScriptPubKey
	15, // 11: bitcoind.v1.Output.script_sig:type_name -> bitcoind.v1.ScriptSig
	12, // 12: bitcoind.v1.GetRawTransactionResponse.tx:type_name -> bitcoind.v1.RawTransaction
	16, // 13: bitcoind.v1.GetRawTransactionResponse.inputs:type_name -> bitcoind.v1.Input
	18, // 14: bitcoind.v1.GetRawTransactionResponse.outputs:type_name -> bitcoind.v1.Output
	1,  // 15: bitcoind.v1.GetBlockResponse.block:type_name -> bitcoind.v1.Block
	75, // 16: bitcoind.v1.ListAccountsResponse.accounts:type_name -> bitcoind.v1.ListAccountsResponse.AccountsEntry
	76, // 17: bitcoind.v1.CreatePsbtRequest.inputs:type_name -> bitcoind.v1.CreatePsbtRequest.Input
	77, // 18: bitcoind.v1.CreatePsbtRequest.outputs:type_name -> bitcoind.v1.CreatePsbtRequest.OutputsEntry
	16, // 19: bitcoind.v1.DecodeRawTransactionResponse.inputs:type_name -> bitcoind.v1.Input
	18, // 20: bitcoind.v1.DecodeRawTransactionResponse.outputs:type_name -> bitcoind.v1.Output
	57, // 21: bitcoind.v1.DecodePsbtResponse.tx:type_name -> bitcoind.v1.DecodeRawTransactionResponse
	83, // 22: bitcoind.v1.DecodePsbtResponse.unknown:type_name -> bitcoind.v1.DecodePsbtResponse.UnknownEntry
	81, // 23: bitcoind.v1.DecodePsbtResponse.inputs:type_name -> bitcoind.v1.DecodePsbtResponse.Input
	82, // 24: bitcoind.v1.DecodePsbtResponse.outputs:type_name -> bitcoind.v1.DecodePsbtResponse.Output
	87, // 25: bitcoind.v1.AnalyzePsbtResponse.inputs:type_name -> bitcoind.v1.AnalyzePsbtResponse.Input
	71, // 26: bitcoind.v1.UtxoUpdatePsbtRequest.descriptors:type_name -> bitcoind.v1.Descriptor
	89, // 27: bitcoind.v1.TestMempoolAcceptResponse.results:type_name -> bitcoind.v1.TestMempoolAcceptResponse.Result
	70, // 28: bitcoind.v1.DescriptorRange.range:type_name -> bitcoind.v1.Range
	72, // 29: bitcoind.v1.Descriptor.object_descriptor:type_name -> bitcoind.v1.DescriptorObject
	69, // 30: bitcoind.v1.DescriptorObject.range:type_name -> bitcoind.v1.DescriptorRange
	17, // 31: bitcoind.v1.DecodePsbtResponse.WitnessUtxo.script_pub_key:type_name -> bitcoind.v1.ScriptPubKey
	57, // 32: bitcoind.v1.DecodePsbtResponse.Input.non_witness_utxo:type_name -> bitcoind.v1.DecodeRawTransactionResponse
	78, // 33: bitcoind.v1.DecodePsbtResponse.Input.witness_utxo:type_name -> bitcoind.v1.DecodePsbtResponse.WitnessUtxo
	84, // 34: bitcoind.v1.DecodePsbtResponse.Input.partial_signatures:type_name -> bitcoind.v1.DecodePsbtResponse.Input.PartialSignaturesEntry
	79, // 35: bitcoind.v1.DecodePsbtResponse.Input.redeem_script:type_name -> bitcoind.v1.DecodePsbtResponse.RedeemScript
	79, // 36: bitcoind.v1.DecodePsbtResponse.Input.witness_script:type_name -> bitcoind.v1.DecodePsbtResponse.RedeemScript
	80, // 37: bitcoind.v1.DecodePsbtResponse.Input.bip32_derivs:type_name -> bitcoind.v1.DecodePsbtResponse.Bip32Deriv
	15, // 38: bitcoind.v1.DecodePsbtResponse.Input.final_scriptsig:type_name -> bitcoind.v1.ScriptSig
	85, // 39: bitcoind.v1.DecodePsbtResponse.Input.unknown:type_name -> bitcoind.v1.DecodePsbtResponse.Input.UnknownEntry
	79, // 40: bitcoind.v1.DecodePsbtResponse.Output.redeem_script:type_name -> bitcoind.v1.DecodePsbtResponse.RedeemScript
	79, // 41: bitcoind.v1.DecodePsbtResponse.Output.witness_script:type_name -> bitcoind.v1.DecodePsbtResponse.RedeemScript
	80, // 42: bitcoind.v1.DecodePsbtResponse.Output.bip32_derivs:type_name -> bitcoind.v1.DecodePsbtResponse.Bip32Deriv
	86, // 43: bitcoind.v1.DecodePsbtResponse.Output.unknown:type_name -> bitcoind.v1.DecodePsbtResponse.Output.UnknownEntry
	88, // 44: bitcoind.v1.AnalyzePsbtResponse.Input.missing:type_name -> bitcoind.v1.AnalyzePsbtResponse.Input.Missing
	3,  // 45: bitcoind.v1.BitcoindService.ListRecentTransactions:input_type -> bitcoind.v1.ListRecentTransactionsRequest
	0,  // 46: bitcoind.v1.BitcoindService.ListBlocks:input_type -> bitcoind.v1.ListBlocksRequest
	20, // 47: bitcoind.v1.BitcoindService.GetBlock:input_type -> bitcoind.v1.GetBlockRequest
	91, // 48: bitcoind.v1.BitcoindService.GetBlockchainInfo:input_type -> google.protobuf.Empty
	91, // 49: bitcoind.v1.BitcoindService.ListPeers:input_type -> google.protobuf.Empty
	9,  // 50: bitcoind.v1.BitcoindService.EstimateSmartFee:input_type -> bitcoind.v1.EstimateSmartFeeRequest
	11, // 51: bitcoind.v1.BitcoindService.GetRawTransaction:input_type -> bitcoind.v1.GetRawTransactionRequest
	13, // 52: bitcoind.v1.BitcoindService.CreateRawTransaction:input_type -> bitcoind.v1.CreateRawTransactionRequest
	22, // 53: bitcoind.v1.BitcoindService.CreateWallet:input_type -> bitcoind.v1.CreateWalletRequest
	24, // 54: bitcoind.v1.BitcoindService.BackupWallet:input_type -> bitcoind.v1.BackupWalletRequest
	26, // 55: bitcoind.v1.BitcoindService.DumpWallet:input_type -> bitcoind.v1.DumpWalletRequest
	28, // 56: bitcoind.v1.BitcoindService.ImportWallet:input_type -> bitcoind.v1.ImportWalletRequest
	30, // 57: bitcoind.v1.BitcoindService.UnloadWallet:input_type -> bitcoind.v1.UnloadWalletRequest
	32, // 58: bitcoind.v1.BitcoindService.DumpPrivKey:input_type -> bitcoind.v1.DumpPrivKeyRequest
	34, // 59: bitcoind.v1.BitcoindService.ImportPrivKey:input_type -> bitcoind.v1.ImportPrivKeyRequest
	36, // 60: bitcoind.v1.BitcoindService.ImportAddress:input_type -> bitcoind.v1.ImportAddressRequest
	38, // 61: bitcoind.v1.BitcoindService.ImportPubKey:input_type -> bitcoind.v1.ImportPubKeyRequest
	40, // 62: bitcoind.v1.BitcoindService.KeyPoolRefill:input_type -> bitcoind.v1.KeyPoolRefillRequest
	42, // 63: bitcoind.v1.BitcoindService.GetAccount:input_type -> bitcoind.v1.GetAccountRequest
	44, // 64: bitcoind.v1.BitcoindService.SetAccount:input_type -> bitcoind.v1.SetAccountRequest
	46, // 65: bitcoind.v1.BitcoindService.GetAddressesByAccount:input_type -> bitcoind.v1.GetAddressesByAccountRequest
	48, // 66: bitcoind.v1.BitcoindService.ListAccounts:input_type -> bitcoind.v1.ListAccountsRequest
	50, // 67: bitcoind.v1.BitcoindService.AddMultisigAddress:input_type -> bitcoind.v1.AddMultisigAddressRequest
	52, // 68: bitcoind.v1.BitcoindService.CreateMultisig:input_type -> bitcoind.v1.CreateMultisigRequest
	54, // 69: bitcoind.v1.BitcoindService.CreatePsbt:input_type -> bitcoind.v1.CreatePsbtRequest
	56, // 70: bitcoind.v1.BitcoindService.DecodePsbt:input_type -> bitcoind.v1.DecodePsbtRequest
	59, // 71: bitcoind.v1.BitcoindService.AnalyzePsbt:input_type -> bitcoind.v1.AnalyzePsbtRequest
	61, // 72: bitcoind.v1.BitcoindService.CombinePsbt:input_type -> bitcoind.v1.CombinePsbtRequest
	63, // 73: bitcoind.v1.BitcoindService.UtxoUpdatePsbt:input_type -> bitcoind.v1.UtxoUpdatePsbtRequest
	65, // 74: bitcoind.v1.BitcoindService.JoinPsbts:input_type -> bitcoind.v1.JoinPsbtsRequest
	67, // 75: bitcoind.v1.BitcoindService.TestMempoolAccept:input_type -> bitcoind.v1.TestMempoolAcceptRequest
	4,  // 76: bitcoind.v1.BitcoindService.ListRecentTransactions:output_type -> bitcoind.v1.ListRecentTransactionsResponse
	2,  // 77: bitcoind.v1.BitcoindService.ListBlocks:output_type -> bitcoind.v1.ListBlocksResponse
	21, // 78: bitcoind.v1.BitcoindService.GetBlock:output_type -> bitcoind.v1.GetBlockResponse
	6,  // 79: bitcoind.v1.BitcoindService.GetBlockchainInfo:output_type -> bitcoind.v1.GetBlockchainInfoResponse
	8,  // 80: bitcoind.v1.BitcoindService.ListPeers:output_type -> bitcoind.v1.ListPeersResponse
	10, // 81: bitcoind.v1.BitcoindService.EstimateSmartFee:output_type -> bitcoind.v1.EstimateSmartFeeResponse
	19, // 82: bitcoind.v1.BitcoindService.GetRawTransaction:output_type -> bitcoind.v1.GetRawTransactionResponse
	14, // 83: bitcoind.v1.BitcoindService.CreateRawTransaction:output_type -> bitcoind.v1.CreateRawTransactionResponse
	23, // 84: bitcoind.v1.BitcoindService.CreateWallet:output_type -> bitcoind.v1.CreateWalletResponse
	25, // 85: bitcoind.v1.BitcoindService.BackupWallet:output_type -> bitcoind.v1.BackupWalletResponse
	27, // 86: bitcoind.v1.BitcoindService.DumpWallet:output_type -> bitcoind.v1.DumpWalletResponse
	29, // 87: bitcoind.v1.BitcoindService.ImportWallet:output_type -> bitcoind.v1.ImportWalletResponse
	31, // 88: bitcoind.v1.BitcoindService.UnloadWallet:output_type -> bitcoind.v1.UnloadWalletResponse
	33, // 89: bitcoind.v1.BitcoindService.DumpPrivKey:output_type -> bitcoind.v1.DumpPrivKeyResponse
	35, // 90: bitcoind.v1.BitcoindService.ImportPrivKey:output_type -> bitcoind.v1.ImportPrivKeyResponse
	37, // 91: bitcoind.v1.BitcoindService.ImportAddress:output_type -> bitcoind.v1.ImportAddressResponse
	39, // 92: bitcoind.v1.BitcoindService.ImportPubKey:output_type -> bitcoind.v1.ImportPubKeyResponse
	41, // 93: bitcoind.v1.BitcoindService.KeyPoolRefill:output_type -> bitcoind.v1.KeyPoolRefillResponse
	43, // 94: bitcoind.v1.BitcoindService.GetAccount:output_type -> bitcoind.v1.GetAccountResponse
	45, // 95: bitcoind.v1.BitcoindService.SetAccount:output_type -> bitcoind.v1.SetAccountResponse
	47, // 96: bitcoind.v1.BitcoindService.GetAddressesByAccount:output_type -> bitcoind.v1.GetAddressesByAccountResponse
	49, // 97: bitcoind.v1.BitcoindService.ListAccounts:output_type -> bitcoind.v1.ListAccountsResponse
	51, // 98: bitcoind.v1.BitcoindService.AddMultisigAddress:output_type -> bitcoind.v1.AddMultisigAddressResponse
	53, // 99: bitcoind.v1.BitcoindService.CreateMultisig:output_type -> bitcoind.v1.CreateMultisigResponse
	55, // 100: bitcoind.v1.BitcoindService.CreatePsbt:output_type -> bitcoind.v1.CreatePsbtResponse
	58, // 101: bitcoind.v1.BitcoindService.DecodePsbt:output_type -> bitcoind.v1.DecodePsbtResponse
	60, // 102: bitcoind.v1.BitcoindService.AnalyzePsbt:output_type -> bitcoind.v1.AnalyzePsbtResponse
	62, // 103: bitcoind.v1.BitcoindService.CombinePsbt:output_type -> bitcoind.v1.CombinePsbtResponse
	64, // 104: bitcoind.v1.BitcoindService.UtxoUpdatePsbt:output_type -> bitcoind.v1.UtxoUpdatePsbtResponse
	66, // 105: bitcoind.v1.BitcoindService.JoinPsbts:output_type -> bitcoind.v1.JoinPsbtsResponse
	68, // 106: bitcoind.v1.BitcoindService.TestMempoolAccept:output_type -> bitcoind.v1.TestMempoolAcceptResponse
	76, // [76:107] is the sub-list for method output_type
	45, // [45:76] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_bitcoind_v1_bitcoind_proto_init() }
func file_bitcoind_v1_bitcoind_proto_init() {
	if File_bitcoind_v1_bitcoind_proto != nil {
		return
	}
	file_bitcoind_v1_bitcoind_proto_msgTypes[5].OneofWrappers = []any{}
	file_bitcoind_v1_bitcoind_proto_msgTypes[20].OneofWrappers = []any{
		(*GetBlockRequest_Hash)(nil),
		(*GetBlockRequest_Height)(nil),
	}
	file_bitcoind_v1_bitcoind_proto_msgTypes[69].OneofWrappers = []any{
		(*DescriptorRange_End)(nil),
		(*DescriptorRange_Range)(nil),
	}
	file_bitcoind_v1_bitcoind_proto_msgTypes[71].OneofWrappers = []any{
		(*Descriptor_StringDescriptor)(nil),
		(*Descriptor_ObjectDescriptor)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bitcoind_v1_bitcoind_proto_rawDesc), len(file_bitcoind_v1_bitcoind_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bitcoind_v1_bitcoind_proto_goTypes,
		DependencyIndexes: file_bitcoind_v1_bitcoind_proto_depIdxs,
		MessageInfos:      file_bitcoind_v1_bitcoind_proto_msgTypes,
	}.Build()
	File_bitcoind_v1_bitcoind_proto = out.File
	file_bitcoind_v1_bitcoind_proto_goTypes = nil
	file_bitcoind_v1_bitcoind_proto_depIdxs = nil
}
