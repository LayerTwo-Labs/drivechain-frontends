build-go:
    go build -v -o ./bin/bitwindowd .

build-go-x86:
    CGO_ENABLED=1 GOARCH=amd64 go build -v -o ./bin/bitwindowd .

build: build-enforcer build-go

run:
    ./bin/bitwindowd

clean:
    rm -rf ./bin
    rm -rf bip300301_enforcer.mdb
    rm -rf .crates*
    go clean

lint:
    golangci-lint run ./...

gen: gen-server gen-enforcer

gen-server:
    buf generate --template buf.go.gen.yaml .

gen-enforcer:
    buf generate --template buf.go.gen.yaml https://github.com/LayerTwo-Labs/cusf_sidechain_proto.git

build-enforcer:
    #!/usr/bin/env bash
    set -euo pipefail

    # Download the correct binary for the current OS
    if [[ "$OSTYPE" == "darwin"* ]]; then
        enforcer_version_postfix="apple-darwin"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        enforcer_version_postfix="unknown-linux-gnu"
    else
        echo "Unsupported operating system: $OSTYPE"
        exit 1
    fi

    binary_name="bip300301-enforcer"
    if ! test -f ./bin/$binary_name; then
        echo "Downloading $binary_name..."
        mkdir -p ./bin
        
        # Download
        enforcer_zip=bip300301-enforcer-latest-x86_64-$enforcer_version_postfix.zip
        curl --fail -O https://releases.drivechain.info/$enforcer_zip
        
        # Unpack directly to bin directory
        echo "Unpacking: unzip -j $enforcer_zip '**/bip300301-enforcer*' -d ./bin/"
        unzip -j $enforcer_zip '**/bip300301-enforcer*' -d ./bin/
        
        # Rename the extracted file to our standard name
        mv ./bin/bip300301-enforcer* ./bin/$binary_name
        chmod +x ./bin/$binary_name
        
        # Clean up
        rm $enforcer_zip
    else
        echo "$binary_name already exists in ./bin/$binary_name, skipping download"
    fi
