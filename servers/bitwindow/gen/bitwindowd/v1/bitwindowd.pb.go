// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: bitwindowd/v1/bitwindowd.proto

package bitwindowdv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDenialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DelaySeconds  int32                  `protobuf:"varint,1,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	NumHops       int32                  `protobuf:"varint,2,opt,name=num_hops,json=numHops,proto3" json:"num_hops,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDenialRequest) Reset() {
	*x = CreateDenialRequest{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDenialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDenialRequest) ProtoMessage() {}

func (x *CreateDenialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDenialRequest.ProtoReflect.Descriptor instead.
func (*CreateDenialRequest) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDenialRequest) GetDelaySeconds() int32 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

func (x *CreateDenialRequest) GetNumHops() int32 {
	if x != nil {
		return x.NumHops
	}
	return 0
}

type CreateDenialResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDenialResponse) Reset() {
	*x = CreateDenialResponse{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDenialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDenialResponse) ProtoMessage() {}

func (x *CreateDenialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDenialResponse.ProtoReflect.Descriptor instead.
func (*CreateDenialResponse) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDenialResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Denial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DelaySeconds  int32                  `protobuf:"varint,2,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	NumHops       int32                  `protobuf:"varint,3,opt,name=num_hops,json=numHops,proto3" json:"num_hops,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CancelledAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cancelled_at,json=cancelledAt,proto3,oneof" json:"cancelled_at,omitempty"`
	NextExecution *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=next_execution,json=nextExecution,proto3,oneof" json:"next_execution,omitempty"` // When the next hop will occur
	Executions    []*ExecutedDenial      `protobuf:"bytes,7,rep,name=executions,proto3" json:"executions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Denial) Reset() {
	*x = Denial{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Denial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Denial) ProtoMessage() {}

func (x *Denial) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Denial.ProtoReflect.Descriptor instead.
func (*Denial) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{2}
}

func (x *Denial) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Denial) GetDelaySeconds() int32 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

func (x *Denial) GetNumHops() int32 {
	if x != nil {
		return x.NumHops
	}
	return 0
}

func (x *Denial) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Denial) GetCancelledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelledAt
	}
	return nil
}

func (x *Denial) GetNextExecution() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecution
	}
	return nil
}

func (x *Denial) GetExecutions() []*ExecutedDenial {
	if x != nil {
		return x.Executions
	}
	return nil
}

type ListDenialsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Denials       []*Denial              `protobuf:"bytes,1,rep,name=denials,proto3" json:"denials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDenialsResponse) Reset() {
	*x = ListDenialsResponse{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDenialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDenialsResponse) ProtoMessage() {}

func (x *ListDenialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDenialsResponse.ProtoReflect.Descriptor instead.
func (*ListDenialsResponse) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{3}
}

func (x *ListDenialsResponse) GetDenials() []*Denial {
	if x != nil {
		return x.Denials
	}
	return nil
}

type CancelDenialRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelDenialRequest) Reset() {
	*x = CancelDenialRequest{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelDenialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDenialRequest) ProtoMessage() {}

func (x *CancelDenialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDenialRequest.ProtoReflect.Descriptor instead.
func (*CancelDenialRequest) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{4}
}

func (x *CancelDenialRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExecutedDenial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DenialId      int64                  `protobuf:"varint,2,opt,name=denial_id,json=denialId,proto3" json:"denial_id,omitempty"`
	TransactionId string                 `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutedDenial) Reset() {
	*x = ExecutedDenial{}
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutedDenial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutedDenial) ProtoMessage() {}

func (x *ExecutedDenial) ProtoReflect() protoreflect.Message {
	mi := &file_bitwindowd_v1_bitwindowd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutedDenial.ProtoReflect.Descriptor instead.
func (*ExecutedDenial) Descriptor() ([]byte, []int) {
	return file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutedDenial) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExecutedDenial) GetDenialId() int64 {
	if x != nil {
		return x.DenialId
	}
	return 0
}

func (x *ExecutedDenial) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ExecutedDenial) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_bitwindowd_v1_bitwindowd_proto protoreflect.FileDescriptor

var file_bitwindowd_v1_bitwindowd_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d,
	0x5f, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d,
	0x48, 0x6f, 0x70, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x03, 0x0a,
	0x06, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x75, 0x6d, 0x5f, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6e, 0x75, 0x6d, 0x48, 0x6f, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e, 0x69, 0x61,
	0x6c, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x46, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x69,
	0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x74, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c,
	0x52, 0x07, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e,
	0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x32, 0xbb, 0x02, 0x0a, 0x11, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x57, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c,
	0x12, 0x22, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x22, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x65,
	0x6e, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x6e, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0xcd, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x2d, 0x4c,
	0x61, 0x62, 0x73, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x73, 0x61, 0x69, 0x6c, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x2f, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x42, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x42, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x64, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_bitwindowd_v1_bitwindowd_proto_rawDescOnce sync.Once
	file_bitwindowd_v1_bitwindowd_proto_rawDescData []byte
)

func file_bitwindowd_v1_bitwindowd_proto_rawDescGZIP() []byte {
	file_bitwindowd_v1_bitwindowd_proto_rawDescOnce.Do(func() {
		file_bitwindowd_v1_bitwindowd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bitwindowd_v1_bitwindowd_proto_rawDesc), len(file_bitwindowd_v1_bitwindowd_proto_rawDesc)))
	})
	return file_bitwindowd_v1_bitwindowd_proto_rawDescData
}

var file_bitwindowd_v1_bitwindowd_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bitwindowd_v1_bitwindowd_proto_goTypes = []any{
	(*CreateDenialRequest)(nil),   // 0: bitwindowd.v1.CreateDenialRequest
	(*CreateDenialResponse)(nil),  // 1: bitwindowd.v1.CreateDenialResponse
	(*Denial)(nil),                // 2: bitwindowd.v1.Denial
	(*ListDenialsResponse)(nil),   // 3: bitwindowd.v1.ListDenialsResponse
	(*CancelDenialRequest)(nil),   // 4: bitwindowd.v1.CancelDenialRequest
	(*ExecutedDenial)(nil),        // 5: bitwindowd.v1.ExecutedDenial
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_bitwindowd_v1_bitwindowd_proto_depIdxs = []int32{
	6,  // 0: bitwindowd.v1.Denial.created_at:type_name -> google.protobuf.Timestamp
	6,  // 1: bitwindowd.v1.Denial.cancelled_at:type_name -> google.protobuf.Timestamp
	6,  // 2: bitwindowd.v1.Denial.next_execution:type_name -> google.protobuf.Timestamp
	5,  // 3: bitwindowd.v1.Denial.executions:type_name -> bitwindowd.v1.ExecutedDenial
	2,  // 4: bitwindowd.v1.ListDenialsResponse.denials:type_name -> bitwindowd.v1.Denial
	6,  // 5: bitwindowd.v1.ExecutedDenial.created_at:type_name -> google.protobuf.Timestamp
	7,  // 6: bitwindowd.v1.BitwindowdService.Stop:input_type -> google.protobuf.Empty
	0,  // 7: bitwindowd.v1.BitwindowdService.CreateDenial:input_type -> bitwindowd.v1.CreateDenialRequest
	7,  // 8: bitwindowd.v1.BitwindowdService.ListDenials:input_type -> google.protobuf.Empty
	4,  // 9: bitwindowd.v1.BitwindowdService.CancelDenial:input_type -> bitwindowd.v1.CancelDenialRequest
	7,  // 10: bitwindowd.v1.BitwindowdService.Stop:output_type -> google.protobuf.Empty
	1,  // 11: bitwindowd.v1.BitwindowdService.CreateDenial:output_type -> bitwindowd.v1.CreateDenialResponse
	3,  // 12: bitwindowd.v1.BitwindowdService.ListDenials:output_type -> bitwindowd.v1.ListDenialsResponse
	7,  // 13: bitwindowd.v1.BitwindowdService.CancelDenial:output_type -> google.protobuf.Empty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_bitwindowd_v1_bitwindowd_proto_init() }
func file_bitwindowd_v1_bitwindowd_proto_init() {
	if File_bitwindowd_v1_bitwindowd_proto != nil {
		return
	}
	file_bitwindowd_v1_bitwindowd_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bitwindowd_v1_bitwindowd_proto_rawDesc), len(file_bitwindowd_v1_bitwindowd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bitwindowd_v1_bitwindowd_proto_goTypes,
		DependencyIndexes: file_bitwindowd_v1_bitwindowd_proto_depIdxs,
		MessageInfos:      file_bitwindowd_v1_bitwindowd_proto_msgTypes,
	}.Build()
	File_bitwindowd_v1_bitwindowd_proto = out.File
	file_bitwindowd_v1_bitwindowd_proto_goTypes = nil
	file_bitwindowd_v1_bitwindowd_proto_depIdxs = nil
}
