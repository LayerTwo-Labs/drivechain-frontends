// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: multisig/v1/multisig.proto

package multisigv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Address management messages
type AddMultisigAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NRequired     int32                  `protobuf:"varint,1,opt,name=n_required,json=nRequired,proto3" json:"n_required,omitempty"`
	Keys          []string               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMultisigAddressRequest) Reset() {
	*x = AddMultisigAddressRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMultisigAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultisigAddressRequest) ProtoMessage() {}

func (x *AddMultisigAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultisigAddressRequest.ProtoReflect.Descriptor instead.
func (*AddMultisigAddressRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{0}
}

func (x *AddMultisigAddressRequest) GetNRequired() int32 {
	if x != nil {
		return x.NRequired
	}
	return 0
}

func (x *AddMultisigAddressRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *AddMultisigAddressRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type AddMultisigAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RedeemScript  string                 `protobuf:"bytes,2,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	Descriptor_   string                 `protobuf:"bytes,3,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMultisigAddressResponse) Reset() {
	*x = AddMultisigAddressResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMultisigAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMultisigAddressResponse) ProtoMessage() {}

func (x *AddMultisigAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMultisigAddressResponse.ProtoReflect.Descriptor instead.
func (*AddMultisigAddressResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{1}
}

func (x *AddMultisigAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddMultisigAddressResponse) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *AddMultisigAddressResponse) GetDescriptor_() string {
	if x != nil {
		return x.Descriptor_
	}
	return ""
}

type ImportAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Rescan        bool                   `protobuf:"varint,3,opt,name=rescan,proto3" json:"rescan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportAddressRequest) Reset() {
	*x = ImportAddressRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAddressRequest) ProtoMessage() {}

func (x *ImportAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAddressRequest.ProtoReflect.Descriptor instead.
func (*ImportAddressRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{2}
}

func (x *ImportAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ImportAddressRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ImportAddressRequest) GetRescan() bool {
	if x != nil {
		return x.Rescan
	}
	return false
}

type ImportAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportAddressResponse) Reset() {
	*x = ImportAddressResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAddressResponse) ProtoMessage() {}

func (x *ImportAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAddressResponse.ProtoReflect.Descriptor instead.
func (*ImportAddressResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{3}
}

type GetAddressInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressInfoRequest) Reset() {
	*x = GetAddressInfoRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressInfoRequest) ProtoMessage() {}

func (x *GetAddressInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAddressInfoRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{4}
}

func (x *GetAddressInfoRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetAddressInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Address        string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ScriptPubKey   string                 `protobuf:"bytes,2,opt,name=script_pub_key,json=scriptPubKey,proto3" json:"script_pub_key,omitempty"`
	IsMine         bool                   `protobuf:"varint,3,opt,name=is_mine,json=isMine,proto3" json:"is_mine,omitempty"`
	IsWatchonly    bool                   `protobuf:"varint,4,opt,name=is_watchonly,json=isWatchonly,proto3" json:"is_watchonly,omitempty"`
	Solvable       bool                   `protobuf:"varint,5,opt,name=solvable,proto3" json:"solvable,omitempty"`
	Desc           string                 `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	IsScript       bool                   `protobuf:"varint,7,opt,name=is_script,json=isScript,proto3" json:"is_script,omitempty"`
	IsChange       bool                   `protobuf:"varint,8,opt,name=is_change,json=isChange,proto3" json:"is_change,omitempty"`
	IsWitness      bool                   `protobuf:"varint,9,opt,name=is_witness,json=isWitness,proto3" json:"is_witness,omitempty"`
	WitnessVersion int32                  `protobuf:"varint,10,opt,name=witness_version,json=witnessVersion,proto3" json:"witness_version,omitempty"`
	WitnessProgram string                 `protobuf:"bytes,11,opt,name=witness_program,json=witnessProgram,proto3" json:"witness_program,omitempty"`
	Script         string                 `protobuf:"bytes,12,opt,name=script,proto3" json:"script,omitempty"`
	Hex            string                 `protobuf:"bytes,13,opt,name=hex,proto3" json:"hex,omitempty"`
	Pubkeys        []string               `protobuf:"bytes,14,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	SigsRequired   int32                  `protobuf:"varint,15,opt,name=sigs_required,json=sigsRequired,proto3" json:"sigs_required,omitempty"`
	Pubkey         string                 `protobuf:"bytes,16,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	IsCompressed   bool                   `protobuf:"varint,17,opt,name=is_compressed,json=isCompressed,proto3" json:"is_compressed,omitempty"`
	Label          string                 `protobuf:"bytes,18,opt,name=label,proto3" json:"label,omitempty"`
	Timestamp      int64                  `protobuf:"varint,19,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	HdKeyPath      string                 `protobuf:"bytes,20,opt,name=hd_key_path,json=hdKeyPath,proto3" json:"hd_key_path,omitempty"`
	HdSeedId       string                 `protobuf:"bytes,21,opt,name=hd_seed_id,json=hdSeedId,proto3" json:"hd_seed_id,omitempty"`
	HdFingerprint  string                 `protobuf:"bytes,22,opt,name=hd_fingerprint,json=hdFingerprint,proto3" json:"hd_fingerprint,omitempty"`
	Labels         []string               `protobuf:"bytes,23,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAddressInfoResponse) Reset() {
	*x = GetAddressInfoResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressInfoResponse) ProtoMessage() {}

func (x *GetAddressInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAddressInfoResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{5}
}

func (x *GetAddressInfoResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAddressInfoResponse) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *GetAddressInfoResponse) GetIsMine() bool {
	if x != nil {
		return x.IsMine
	}
	return false
}

func (x *GetAddressInfoResponse) GetIsWatchonly() bool {
	if x != nil {
		return x.IsWatchonly
	}
	return false
}

func (x *GetAddressInfoResponse) GetSolvable() bool {
	if x != nil {
		return x.Solvable
	}
	return false
}

func (x *GetAddressInfoResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetAddressInfoResponse) GetIsScript() bool {
	if x != nil {
		return x.IsScript
	}
	return false
}

func (x *GetAddressInfoResponse) GetIsChange() bool {
	if x != nil {
		return x.IsChange
	}
	return false
}

func (x *GetAddressInfoResponse) GetIsWitness() bool {
	if x != nil {
		return x.IsWitness
	}
	return false
}

func (x *GetAddressInfoResponse) GetWitnessVersion() int32 {
	if x != nil {
		return x.WitnessVersion
	}
	return 0
}

func (x *GetAddressInfoResponse) GetWitnessProgram() string {
	if x != nil {
		return x.WitnessProgram
	}
	return ""
}

func (x *GetAddressInfoResponse) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *GetAddressInfoResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *GetAddressInfoResponse) GetPubkeys() []string {
	if x != nil {
		return x.Pubkeys
	}
	return nil
}

func (x *GetAddressInfoResponse) GetSigsRequired() int32 {
	if x != nil {
		return x.SigsRequired
	}
	return 0
}

func (x *GetAddressInfoResponse) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *GetAddressInfoResponse) GetIsCompressed() bool {
	if x != nil {
		return x.IsCompressed
	}
	return false
}

func (x *GetAddressInfoResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetAddressInfoResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetAddressInfoResponse) GetHdKeyPath() string {
	if x != nil {
		return x.HdKeyPath
	}
	return ""
}

func (x *GetAddressInfoResponse) GetHdSeedId() string {
	if x != nil {
		return x.HdSeedId
	}
	return ""
}

func (x *GetAddressInfoResponse) GetHdFingerprint() string {
	if x != nil {
		return x.HdFingerprint
	}
	return ""
}

func (x *GetAddressInfoResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// UTXO management messages
type ListUnspentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinConf       int32                  `protobuf:"varint,1,opt,name=min_conf,json=minConf,proto3" json:"min_conf,omitempty"`
	MaxConf       int32                  `protobuf:"varint,2,opt,name=max_conf,json=maxConf,proto3" json:"max_conf,omitempty"`
	Addresses     []string               `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnspentRequest) Reset() {
	*x = ListUnspentRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnspentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnspentRequest) ProtoMessage() {}

func (x *ListUnspentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnspentRequest.ProtoReflect.Descriptor instead.
func (*ListUnspentRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{6}
}

func (x *ListUnspentRequest) GetMinConf() int32 {
	if x != nil {
		return x.MinConf
	}
	return 0
}

func (x *ListUnspentRequest) GetMaxConf() int32 {
	if x != nil {
		return x.MaxConf
	}
	return 0
}

func (x *ListUnspentRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListUnspentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Utxos         []*Utxo                `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnspentResponse) Reset() {
	*x = ListUnspentResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnspentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnspentResponse) ProtoMessage() {}

func (x *ListUnspentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnspentResponse.ProtoReflect.Descriptor instead.
func (*ListUnspentResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{7}
}

func (x *ListUnspentResponse) GetUtxos() []*Utxo {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type Utxo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          int32                  `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Label         string                 `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	ScriptPubKey  string                 `protobuf:"bytes,5,opt,name=script_pub_key,json=scriptPubKey,proto3" json:"script_pub_key,omitempty"`
	Amount        int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Confirmations int32                  `protobuf:"varint,7,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	RedeemScript  string                 `protobuf:"bytes,8,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript string                 `protobuf:"bytes,9,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Spendable     bool                   `protobuf:"varint,10,opt,name=spendable,proto3" json:"spendable,omitempty"`
	Solvable      bool                   `protobuf:"varint,11,opt,name=solvable,proto3" json:"solvable,omitempty"`
	Reused        bool                   `protobuf:"varint,12,opt,name=reused,proto3" json:"reused,omitempty"`
	Desc          string                 `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	Safe          bool                   `protobuf:"varint,14,opt,name=safe,proto3" json:"safe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{8}
}

func (x *Utxo) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Utxo) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Utxo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Utxo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Utxo) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *Utxo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Utxo) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *Utxo) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *Utxo) GetWitnessScript() string {
	if x != nil {
		return x.WitnessScript
	}
	return ""
}

func (x *Utxo) GetSpendable() bool {
	if x != nil {
		return x.Spendable
	}
	return false
}

func (x *Utxo) GetSolvable() bool {
	if x != nil {
		return x.Solvable
	}
	return false
}

func (x *Utxo) GetReused() bool {
	if x != nil {
		return x.Reused
	}
	return false
}

func (x *Utxo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Utxo) GetSafe() bool {
	if x != nil {
		return x.Safe
	}
	return false
}

type ListAddressGroupingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAddressGroupingsRequest) Reset() {
	*x = ListAddressGroupingsRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddressGroupingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressGroupingsRequest) ProtoMessage() {}

func (x *ListAddressGroupingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressGroupingsRequest.ProtoReflect.Descriptor instead.
func (*ListAddressGroupingsRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{9}
}

type ListAddressGroupingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groupings     []*AddressGrouping     `protobuf:"bytes,1,rep,name=groupings,proto3" json:"groupings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAddressGroupingsResponse) Reset() {
	*x = ListAddressGroupingsResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddressGroupingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressGroupingsResponse) ProtoMessage() {}

func (x *ListAddressGroupingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressGroupingsResponse.ProtoReflect.Descriptor instead.
func (*ListAddressGroupingsResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{10}
}

func (x *ListAddressGroupingsResponse) GetGroupings() []*AddressGrouping {
	if x != nil {
		return x.Groupings
	}
	return nil
}

type AddressGrouping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []*AddressInfo         `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressGrouping) Reset() {
	*x = AddressGrouping{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressGrouping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressGrouping) ProtoMessage() {}

func (x *AddressGrouping) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressGrouping.ProtoReflect.Descriptor instead.
func (*AddressGrouping) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{11}
}

func (x *AddressGrouping) GetAddresses() []*AddressInfo {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type AddressInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{12}
}

func (x *AddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddressInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// Transaction creation messages
type CreateRawTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inputs        []*TxInput             `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*TxOutput            `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Locktime      int32                  `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRawTransactionRequest) Reset() {
	*x = CreateRawTransactionRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionRequest) ProtoMessage() {}

func (x *CreateRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{13}
}

func (x *CreateRawTransactionRequest) GetInputs() []*TxInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CreateRawTransactionRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CreateRawTransactionRequest) GetLocktime() int32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

type TxInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          int32                  `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence      string                 `protobuf:"bytes,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxInput) Reset() {
	*x = TxInput{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInput) ProtoMessage() {}

func (x *TxInput) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInput.ProtoReflect.Descriptor instead.
func (*TxInput) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{14}
}

func (x *TxInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TxInput) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *TxInput) GetSequence() string {
	if x != nil {
		return x.Sequence
	}
	return ""
}

type TxOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxOutput) Reset() {
	*x = TxOutput{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutput) ProtoMessage() {}

func (x *TxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutput.ProtoReflect.Descriptor instead.
func (*TxOutput) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{15}
}

func (x *TxOutput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TxOutput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateRawTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hex           string                 `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRawTransactionResponse) Reset() {
	*x = CreateRawTransactionResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRawTransactionResponse) ProtoMessage() {}

func (x *CreateRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRawTransactionResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

type CreatePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inputs        []*TxInput             `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*TxOutput            `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Locktime      int32                  `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePsbtRequest) Reset() {
	*x = CreatePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePsbtRequest) ProtoMessage() {}

func (x *CreatePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePsbtRequest.ProtoReflect.Descriptor instead.
func (*CreatePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePsbtRequest) GetInputs() []*TxInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CreatePsbtRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CreatePsbtRequest) GetLocktime() int32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

type CreatePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePsbtResponse) Reset() {
	*x = CreatePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePsbtResponse) ProtoMessage() {}

func (x *CreatePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePsbtResponse.ProtoReflect.Descriptor instead.
func (*CreatePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{18}
}

func (x *CreatePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type WalletCreateFundedPsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inputs        []*TxInput             `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*TxOutput            `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Locktime      int32                  `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Options       *PsbtOptions           `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletCreateFundedPsbtRequest) Reset() {
	*x = WalletCreateFundedPsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletCreateFundedPsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletCreateFundedPsbtRequest) ProtoMessage() {}

func (x *WalletCreateFundedPsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletCreateFundedPsbtRequest.ProtoReflect.Descriptor instead.
func (*WalletCreateFundedPsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{19}
}

func (x *WalletCreateFundedPsbtRequest) GetInputs() []*TxInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WalletCreateFundedPsbtRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WalletCreateFundedPsbtRequest) GetLocktime() int32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

func (x *WalletCreateFundedPsbtRequest) GetOptions() *PsbtOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type PsbtOptions struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	IncludeWatching        bool                   `protobuf:"varint,1,opt,name=include_watching,json=includeWatching,proto3" json:"include_watching,omitempty"`
	ChangePosition         bool                   `protobuf:"varint,2,opt,name=change_position,json=changePosition,proto3" json:"change_position,omitempty"`
	ChangeAddress          int32                  `protobuf:"varint,3,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	IncludeUnsafe          bool                   `protobuf:"varint,4,opt,name=include_unsafe,json=includeUnsafe,proto3" json:"include_unsafe,omitempty"`
	MinConf                int32                  `protobuf:"varint,5,opt,name=min_conf,json=minConf,proto3" json:"min_conf,omitempty"`
	MaxConf                int32                  `protobuf:"varint,6,opt,name=max_conf,json=maxConf,proto3" json:"max_conf,omitempty"`
	SubtractFeeFromOutputs bool                   `protobuf:"varint,7,opt,name=subtract_fee_from_outputs,json=subtractFeeFromOutputs,proto3" json:"subtract_fee_from_outputs,omitempty"`
	Replaceable            bool                   `protobuf:"varint,8,opt,name=replaceable,proto3" json:"replaceable,omitempty"`
	ConfTarget             int32                  `protobuf:"varint,9,opt,name=conf_target,json=confTarget,proto3" json:"conf_target,omitempty"`
	EstimateMode           string                 `protobuf:"bytes,10,opt,name=estimate_mode,json=estimateMode,proto3" json:"estimate_mode,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PsbtOptions) Reset() {
	*x = PsbtOptions{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtOptions) ProtoMessage() {}

func (x *PsbtOptions) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtOptions.ProtoReflect.Descriptor instead.
func (*PsbtOptions) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{20}
}

func (x *PsbtOptions) GetIncludeWatching() bool {
	if x != nil {
		return x.IncludeWatching
	}
	return false
}

func (x *PsbtOptions) GetChangePosition() bool {
	if x != nil {
		return x.ChangePosition
	}
	return false
}

func (x *PsbtOptions) GetChangeAddress() int32 {
	if x != nil {
		return x.ChangeAddress
	}
	return 0
}

func (x *PsbtOptions) GetIncludeUnsafe() bool {
	if x != nil {
		return x.IncludeUnsafe
	}
	return false
}

func (x *PsbtOptions) GetMinConf() int32 {
	if x != nil {
		return x.MinConf
	}
	return 0
}

func (x *PsbtOptions) GetMaxConf() int32 {
	if x != nil {
		return x.MaxConf
	}
	return 0
}

func (x *PsbtOptions) GetSubtractFeeFromOutputs() bool {
	if x != nil {
		return x.SubtractFeeFromOutputs
	}
	return false
}

func (x *PsbtOptions) GetReplaceable() bool {
	if x != nil {
		return x.Replaceable
	}
	return false
}

func (x *PsbtOptions) GetConfTarget() int32 {
	if x != nil {
		return x.ConfTarget
	}
	return 0
}

func (x *PsbtOptions) GetEstimateMode() string {
	if x != nil {
		return x.EstimateMode
	}
	return ""
}

type WalletCreateFundedPsbtResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Psbt           string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	Fee            int64                  `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	ChangePosition int32                  `protobuf:"varint,3,opt,name=change_position,json=changePosition,proto3" json:"change_position,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WalletCreateFundedPsbtResponse) Reset() {
	*x = WalletCreateFundedPsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletCreateFundedPsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletCreateFundedPsbtResponse) ProtoMessage() {}

func (x *WalletCreateFundedPsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletCreateFundedPsbtResponse.ProtoReflect.Descriptor instead.
func (*WalletCreateFundedPsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{21}
}

func (x *WalletCreateFundedPsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

func (x *WalletCreateFundedPsbtResponse) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *WalletCreateFundedPsbtResponse) GetChangePosition() int32 {
	if x != nil {
		return x.ChangePosition
	}
	return 0
}

// PSBT handling messages
type DecodePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtRequest) Reset() {
	*x = DecodePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtRequest) ProtoMessage() {}

func (x *DecodePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtRequest.ProtoReflect.Descriptor instead.
func (*DecodePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{22}
}

func (x *DecodePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type DecodePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            string                 `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Unknown       string                 `protobuf:"bytes,2,opt,name=unknown,proto3" json:"unknown,omitempty"`
	Inputs        []*Input               `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*Output              `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Fee           int32                  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodePsbtResponse) Reset() {
	*x = DecodePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePsbtResponse) ProtoMessage() {}

func (x *DecodePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePsbtResponse.ProtoReflect.Descriptor instead.
func (*DecodePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{23}
}

func (x *DecodePsbtResponse) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *DecodePsbtResponse) GetUnknown() string {
	if x != nil {
		return x.Unknown
	}
	return ""
}

func (x *DecodePsbtResponse) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DecodePsbtResponse) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *DecodePsbtResponse) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type Input struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NonWitnessUtxo     string                 `protobuf:"bytes,1,opt,name=non_witness_utxo,json=nonWitnessUtxo,proto3" json:"non_witness_utxo,omitempty"`
	WitnessUtxo        string                 `protobuf:"bytes,2,opt,name=witness_utxo,json=witnessUtxo,proto3" json:"witness_utxo,omitempty"`
	PartialSignatures  string                 `protobuf:"bytes,3,opt,name=partial_signatures,json=partialSignatures,proto3" json:"partial_signatures,omitempty"`
	Sighash            string                 `protobuf:"bytes,4,opt,name=sighash,proto3" json:"sighash,omitempty"`
	RedeemScript       string                 `protobuf:"bytes,5,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript      string                 `protobuf:"bytes,6,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Bip32Derivs        string                 `protobuf:"bytes,7,opt,name=bip32_derivs,json=bip32Derivs,proto3" json:"bip32_derivs,omitempty"`
	FinalScriptsig     string                 `protobuf:"bytes,8,opt,name=final_scriptsig,json=finalScriptsig,proto3" json:"final_scriptsig,omitempty"`
	FinalScriptwitness string                 `protobuf:"bytes,9,opt,name=final_scriptwitness,json=finalScriptwitness,proto3" json:"final_scriptwitness,omitempty"`
	Unknown            string                 `protobuf:"bytes,10,opt,name=unknown,proto3" json:"unknown,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{24}
}

func (x *Input) GetNonWitnessUtxo() string {
	if x != nil {
		return x.NonWitnessUtxo
	}
	return ""
}

func (x *Input) GetWitnessUtxo() string {
	if x != nil {
		return x.WitnessUtxo
	}
	return ""
}

func (x *Input) GetPartialSignatures() string {
	if x != nil {
		return x.PartialSignatures
	}
	return ""
}

func (x *Input) GetSighash() string {
	if x != nil {
		return x.Sighash
	}
	return ""
}

func (x *Input) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *Input) GetWitnessScript() string {
	if x != nil {
		return x.WitnessScript
	}
	return ""
}

func (x *Input) GetBip32Derivs() string {
	if x != nil {
		return x.Bip32Derivs
	}
	return ""
}

func (x *Input) GetFinalScriptsig() string {
	if x != nil {
		return x.FinalScriptsig
	}
	return ""
}

func (x *Input) GetFinalScriptwitness() string {
	if x != nil {
		return x.FinalScriptwitness
	}
	return ""
}

func (x *Input) GetUnknown() string {
	if x != nil {
		return x.Unknown
	}
	return ""
}

type Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RedeemScript  string                 `protobuf:"bytes,1,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript string                 `protobuf:"bytes,2,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Bip32Derivs   string                 `protobuf:"bytes,3,opt,name=bip32_derivs,json=bip32Derivs,proto3" json:"bip32_derivs,omitempty"`
	Unknown       string                 `protobuf:"bytes,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{25}
}

func (x *Output) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *Output) GetWitnessScript() string {
	if x != nil {
		return x.WitnessScript
	}
	return ""
}

func (x *Output) GetBip32Derivs() string {
	if x != nil {
		return x.Bip32Derivs
	}
	return ""
}

func (x *Output) GetUnknown() string {
	if x != nil {
		return x.Unknown
	}
	return ""
}

type AnalyzePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzePsbtRequest) Reset() {
	*x = AnalyzePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtRequest) ProtoMessage() {}

func (x *AnalyzePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtRequest.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{26}
}

func (x *AnalyzePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type AnalyzePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inputs        []string               `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Next          string                 `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Fee           string                 `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzePsbtResponse) Reset() {
	*x = AnalyzePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzePsbtResponse) ProtoMessage() {}

func (x *AnalyzePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzePsbtResponse.ProtoReflect.Descriptor instead.
func (*AnalyzePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{27}
}

func (x *AnalyzePsbtResponse) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *AnalyzePsbtResponse) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *AnalyzePsbtResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *AnalyzePsbtResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type WalletProcessPsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	Sign          bool                   `protobuf:"varint,2,opt,name=sign,proto3" json:"sign,omitempty"`
	SighashType   string                 `protobuf:"bytes,3,opt,name=sighash_type,json=sighashType,proto3" json:"sighash_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletProcessPsbtRequest) Reset() {
	*x = WalletProcessPsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletProcessPsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletProcessPsbtRequest) ProtoMessage() {}

func (x *WalletProcessPsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletProcessPsbtRequest.ProtoReflect.Descriptor instead.
func (*WalletProcessPsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{28}
}

func (x *WalletProcessPsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

func (x *WalletProcessPsbtRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *WalletProcessPsbtRequest) GetSighashType() string {
	if x != nil {
		return x.SighashType
	}
	return ""
}

type WalletProcessPsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	Complete      bool                   `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletProcessPsbtResponse) Reset() {
	*x = WalletProcessPsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletProcessPsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletProcessPsbtResponse) ProtoMessage() {}

func (x *WalletProcessPsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletProcessPsbtResponse.ProtoReflect.Descriptor instead.
func (*WalletProcessPsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{29}
}

func (x *WalletProcessPsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

func (x *WalletProcessPsbtResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

type CombinePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbts         []string               `protobuf:"bytes,1,rep,name=psbts,proto3" json:"psbts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombinePsbtRequest) Reset() {
	*x = CombinePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombinePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinePsbtRequest) ProtoMessage() {}

func (x *CombinePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinePsbtRequest.ProtoReflect.Descriptor instead.
func (*CombinePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{30}
}

func (x *CombinePsbtRequest) GetPsbts() []string {
	if x != nil {
		return x.Psbts
	}
	return nil
}

type CombinePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombinePsbtResponse) Reset() {
	*x = CombinePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombinePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinePsbtResponse) ProtoMessage() {}

func (x *CombinePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinePsbtResponse.ProtoReflect.Descriptor instead.
func (*CombinePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{31}
}

func (x *CombinePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type FinalizePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizePsbtRequest) Reset() {
	*x = FinalizePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizePsbtRequest) ProtoMessage() {}

func (x *FinalizePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizePsbtRequest.ProtoReflect.Descriptor instead.
func (*FinalizePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{32}
}

func (x *FinalizePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type FinalizePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	Hex           string                 `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	Complete      bool                   `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizePsbtResponse) Reset() {
	*x = FinalizePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizePsbtResponse) ProtoMessage() {}

func (x *FinalizePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizePsbtResponse.ProtoReflect.Descriptor instead.
func (*FinalizePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{33}
}

func (x *FinalizePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

func (x *FinalizePsbtResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *FinalizePsbtResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

type UtxoUpdatePsbtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UtxoUpdatePsbtRequest) Reset() {
	*x = UtxoUpdatePsbtRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UtxoUpdatePsbtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoUpdatePsbtRequest) ProtoMessage() {}

func (x *UtxoUpdatePsbtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoUpdatePsbtRequest.ProtoReflect.Descriptor instead.
func (*UtxoUpdatePsbtRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{34}
}

func (x *UtxoUpdatePsbtRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type UtxoUpdatePsbtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UtxoUpdatePsbtResponse) Reset() {
	*x = UtxoUpdatePsbtResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UtxoUpdatePsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoUpdatePsbtResponse) ProtoMessage() {}

func (x *UtxoUpdatePsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoUpdatePsbtResponse.ProtoReflect.Descriptor instead.
func (*UtxoUpdatePsbtResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{35}
}

func (x *UtxoUpdatePsbtResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type JoinPsbtsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbts         []string               `protobuf:"bytes,1,rep,name=psbts,proto3" json:"psbts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinPsbtsRequest) Reset() {
	*x = JoinPsbtsRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinPsbtsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPsbtsRequest) ProtoMessage() {}

func (x *JoinPsbtsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPsbtsRequest.ProtoReflect.Descriptor instead.
func (*JoinPsbtsRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{36}
}

func (x *JoinPsbtsRequest) GetPsbts() []string {
	if x != nil {
		return x.Psbts
	}
	return nil
}

type JoinPsbtsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinPsbtsResponse) Reset() {
	*x = JoinPsbtsResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinPsbtsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPsbtsResponse) ProtoMessage() {}

func (x *JoinPsbtsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPsbtsResponse.ProtoReflect.Descriptor instead.
func (*JoinPsbtsResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{37}
}

func (x *JoinPsbtsResponse) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

// Transaction signing messages
type SignRawTransactionWithWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HexString     string                 `protobuf:"bytes,1,opt,name=hex_string,json=hexString,proto3" json:"hex_string,omitempty"`
	PrevTxs       []*PreviousTx          `protobuf:"bytes,2,rep,name=prev_txs,json=prevTxs,proto3" json:"prev_txs,omitempty"`
	SighashType   string                 `protobuf:"bytes,3,opt,name=sighash_type,json=sighashType,proto3" json:"sighash_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRawTransactionWithWalletRequest) Reset() {
	*x = SignRawTransactionWithWalletRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRawTransactionWithWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionWithWalletRequest) ProtoMessage() {}

func (x *SignRawTransactionWithWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionWithWalletRequest.ProtoReflect.Descriptor instead.
func (*SignRawTransactionWithWalletRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{38}
}

func (x *SignRawTransactionWithWalletRequest) GetHexString() string {
	if x != nil {
		return x.HexString
	}
	return ""
}

func (x *SignRawTransactionWithWalletRequest) GetPrevTxs() []*PreviousTx {
	if x != nil {
		return x.PrevTxs
	}
	return nil
}

func (x *SignRawTransactionWithWalletRequest) GetSighashType() string {
	if x != nil {
		return x.SighashType
	}
	return ""
}

type PreviousTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          int32                  `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	ScriptPubKey  string                 `protobuf:"bytes,3,opt,name=script_pub_key,json=scriptPubKey,proto3" json:"script_pub_key,omitempty"`
	RedeemScript  string                 `protobuf:"bytes,4,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	WitnessScript string                 `protobuf:"bytes,5,opt,name=witness_script,json=witnessScript,proto3" json:"witness_script,omitempty"`
	Amount        int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviousTx) Reset() {
	*x = PreviousTx{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviousTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousTx) ProtoMessage() {}

func (x *PreviousTx) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousTx.ProtoReflect.Descriptor instead.
func (*PreviousTx) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{39}
}

func (x *PreviousTx) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *PreviousTx) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *PreviousTx) GetScriptPubKey() string {
	if x != nil {
		return x.ScriptPubKey
	}
	return ""
}

func (x *PreviousTx) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *PreviousTx) GetWitnessScript() string {
	if x != nil {
		return x.WitnessScript
	}
	return ""
}

func (x *PreviousTx) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SignRawTransactionWithWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hex           string                 `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	Complete      bool                   `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
	Errors        []*Error               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRawTransactionWithWalletResponse) Reset() {
	*x = SignRawTransactionWithWalletResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRawTransactionWithWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionWithWalletResponse) ProtoMessage() {}

func (x *SignRawTransactionWithWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionWithWalletResponse.ProtoReflect.Descriptor instead.
func (*SignRawTransactionWithWalletResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{40}
}

func (x *SignRawTransactionWithWalletResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *SignRawTransactionWithWalletResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

func (x *SignRawTransactionWithWalletResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          int32                  `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	ScriptSig     string                 `protobuf:"bytes,3,opt,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
	Sequence      string                 `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{41}
}

func (x *Error) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Error) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Error) GetScriptSig() string {
	if x != nil {
		return x.ScriptSig
	}
	return ""
}

func (x *Error) GetSequence() string {
	if x != nil {
		return x.Sequence
	}
	return ""
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Transaction misc messages
type SendRawTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HexString     string                 `protobuf:"bytes,1,opt,name=hex_string,json=hexString,proto3" json:"hex_string,omitempty"`
	MaxFeeRate    float64                `protobuf:"fixed64,2,opt,name=max_fee_rate,json=maxFeeRate,proto3" json:"max_fee_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRawTransactionRequest) Reset() {
	*x = SendRawTransactionRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRawTransactionRequest) ProtoMessage() {}

func (x *SendRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{42}
}

func (x *SendRawTransactionRequest) GetHexString() string {
	if x != nil {
		return x.HexString
	}
	return ""
}

func (x *SendRawTransactionRequest) GetMaxFeeRate() float64 {
	if x != nil {
		return x.MaxFeeRate
	}
	return 0
}

type SendRawTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRawTransactionResponse) Reset() {
	*x = SendRawTransactionResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRawTransactionResponse) ProtoMessage() {}

func (x *SendRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{43}
}

func (x *SendRawTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type TestMempoolAcceptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HexStrings    []string               `protobuf:"bytes,1,rep,name=hex_strings,json=hexStrings,proto3" json:"hex_strings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMempoolAcceptRequest) Reset() {
	*x = TestMempoolAcceptRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMempoolAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMempoolAcceptRequest) ProtoMessage() {}

func (x *TestMempoolAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMempoolAcceptRequest.ProtoReflect.Descriptor instead.
func (*TestMempoolAcceptRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{44}
}

func (x *TestMempoolAcceptRequest) GetHexStrings() []string {
	if x != nil {
		return x.HexStrings
	}
	return nil
}

type TestMempoolAcceptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Allowed       bool                   `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed,omitempty"`
	RejectReason  string                 `protobuf:"bytes,3,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMempoolAcceptResponse) Reset() {
	*x = TestMempoolAcceptResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMempoolAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMempoolAcceptResponse) ProtoMessage() {}

func (x *TestMempoolAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMempoolAcceptResponse.ProtoReflect.Descriptor instead.
func (*TestMempoolAcceptResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{45}
}

func (x *TestMempoolAcceptResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TestMempoolAcceptResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *TestMempoolAcceptResponse) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

type GetTransactionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Txid             string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	IncludeWatchonly bool                   `protobuf:"varint,2,opt,name=include_watchonly,json=includeWatchonly,proto3" json:"include_watchonly,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{46}
}

func (x *GetTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetTransactionRequest) GetIncludeWatchonly() bool {
	if x != nil {
		return x.IncludeWatchonly
	}
	return false
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Confirmations int32                  `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockTime     int64                  `protobuf:"varint,3,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHash     string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight   int32                  `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Amount        int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee           int64                  `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Hex           string                 `protobuf:"bytes,8,opt,name=hex,proto3" json:"hex,omitempty"`
	Details       []*Detail              `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{47}
}

func (x *GetTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetTransactionResponse) GetConfirmations() int32 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetTransactionResponse) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *GetTransactionResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *GetTransactionResponse) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetTransactionResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetTransactionResponse) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *GetTransactionResponse) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *GetTransactionResponse) GetDetails() []*Detail {
	if x != nil {
		return x.Details
	}
	return nil
}

type Detail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Label         string                 `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Vout          int32                  `protobuf:"varint,5,opt,name=vout,proto3" json:"vout,omitempty"`
	Fee           float64                `protobuf:"fixed64,6,opt,name=fee,proto3" json:"fee,omitempty"`
	Abandoned     bool                   `protobuf:"varint,7,opt,name=abandoned,proto3" json:"abandoned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Detail) Reset() {
	*x = Detail{}
	mi := &file_multisig_v1_multisig_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detail) ProtoMessage() {}

func (x *Detail) ProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_multisig_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detail.ProtoReflect.Descriptor instead.
func (*Detail) Descriptor() ([]byte, []int) {
	return file_multisig_v1_multisig_proto_rawDescGZIP(), []int{48}
}

func (x *Detail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Detail) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Detail) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Detail) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Detail) GetVout() int32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Detail) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Detail) GetAbandoned() bool {
	if x != nil {
		return x.Abandoned
	}
	return false
}

var File_multisig_v1_multisig_proto protoreflect.FileDescriptor

const file_multisig_v1_multisig_proto_rawDesc = "" +
	"\n" +
	"\x1amultisig/v1/multisig.proto\x12\vmultisig.v1\"d\n" +
	"\x19AddMultisigAddressRequest\x12\x1d\n" +
	"\n" +
	"n_required\x18\x01 \x01(\x05R\tnRequired\x12\x12\n" +
	"\x04keys\x18\x02 \x03(\tR\x04keys\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\"{\n" +
	"\x1aAddMultisigAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12#\n" +
	"\rredeem_script\x18\x02 \x01(\tR\fredeemScript\x12\x1e\n" +
	"\n" +
	"descriptor\x18\x03 \x01(\tR\n" +
	"descriptor\"^\n" +
	"\x14ImportAddressRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x16\n" +
	"\x06rescan\x18\x03 \x01(\bR\x06rescan\"\x17\n" +
	"\x15ImportAddressResponse\"1\n" +
	"\x15GetAddressInfoRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\xc6\x05\n" +
	"\x16GetAddressInfoResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12$\n" +
	"\x0escript_pub_key\x18\x02 \x01(\tR\fscriptPubKey\x12\x17\n" +
	"\ais_mine\x18\x03 \x01(\bR\x06isMine\x12!\n" +
	"\fis_watchonly\x18\x04 \x01(\bR\visWatchonly\x12\x1a\n" +
	"\bsolvable\x18\x05 \x01(\bR\bsolvable\x12\x12\n" +
	"\x04desc\x18\x06 \x01(\tR\x04desc\x12\x1b\n" +
	"\tis_script\x18\a \x01(\bR\bisScript\x12\x1b\n" +
	"\tis_change\x18\b \x01(\bR\bisChange\x12\x1d\n" +
	"\n" +
	"is_witness\x18\t \x01(\bR\tisWitness\x12'\n" +
	"\x0fwitness_version\x18\n" +
	" \x01(\x05R\x0ewitnessVersion\x12'\n" +
	"\x0fwitness_program\x18\v \x01(\tR\x0ewitnessProgram\x12\x16\n" +
	"\x06script\x18\f \x01(\tR\x06script\x12\x10\n" +
	"\x03hex\x18\r \x01(\tR\x03hex\x12\x18\n" +
	"\apubkeys\x18\x0e \x03(\tR\apubkeys\x12#\n" +
	"\rsigs_required\x18\x0f \x01(\x05R\fsigsRequired\x12\x16\n" +
	"\x06pubkey\x18\x10 \x01(\tR\x06pubkey\x12#\n" +
	"\ris_compressed\x18\x11 \x01(\bR\fisCompressed\x12\x14\n" +
	"\x05label\x18\x12 \x01(\tR\x05label\x12\x1c\n" +
	"\ttimestamp\x18\x13 \x01(\x03R\ttimestamp\x12\x1e\n" +
	"\vhd_key_path\x18\x14 \x01(\tR\thdKeyPath\x12\x1c\n" +
	"\n" +
	"hd_seed_id\x18\x15 \x01(\tR\bhdSeedId\x12%\n" +
	"\x0ehd_fingerprint\x18\x16 \x01(\tR\rhdFingerprint\x12\x16\n" +
	"\x06labels\x18\x17 \x03(\tR\x06labels\"h\n" +
	"\x12ListUnspentRequest\x12\x19\n" +
	"\bmin_conf\x18\x01 \x01(\x05R\aminConf\x12\x19\n" +
	"\bmax_conf\x18\x02 \x01(\x05R\amaxConf\x12\x1c\n" +
	"\taddresses\x18\x03 \x03(\tR\taddresses\">\n" +
	"\x13ListUnspentResponse\x12'\n" +
	"\x05utxos\x18\x01 \x03(\v2\x11.multisig.v1.UtxoR\x05utxos\"\x88\x03\n" +
	"\x04Utxo\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\x05R\x04vout\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12$\n" +
	"\x0escript_pub_key\x18\x05 \x01(\tR\fscriptPubKey\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12$\n" +
	"\rconfirmations\x18\a \x01(\x05R\rconfirmations\x12#\n" +
	"\rredeem_script\x18\b \x01(\tR\fredeemScript\x12%\n" +
	"\x0ewitness_script\x18\t \x01(\tR\rwitnessScript\x12\x1c\n" +
	"\tspendable\x18\n" +
	" \x01(\bR\tspendable\x12\x1a\n" +
	"\bsolvable\x18\v \x01(\bR\bsolvable\x12\x16\n" +
	"\x06reused\x18\f \x01(\bR\x06reused\x12\x12\n" +
	"\x04desc\x18\r \x01(\tR\x04desc\x12\x12\n" +
	"\x04safe\x18\x0e \x01(\bR\x04safe\"\x1d\n" +
	"\x1bListAddressGroupingsRequest\"Z\n" +
	"\x1cListAddressGroupingsResponse\x12:\n" +
	"\tgroupings\x18\x01 \x03(\v2\x1c.multisig.v1.AddressGroupingR\tgroupings\"I\n" +
	"\x0fAddressGrouping\x126\n" +
	"\taddresses\x18\x01 \x03(\v2\x18.multisig.v1.AddressInfoR\taddresses\"U\n" +
	"\vAddressInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\"\x98\x01\n" +
	"\x1bCreateRawTransactionRequest\x12,\n" +
	"\x06inputs\x18\x01 \x03(\v2\x14.multisig.v1.TxInputR\x06inputs\x12/\n" +
	"\aoutputs\x18\x02 \x03(\v2\x15.multisig.v1.TxOutputR\aoutputs\x12\x1a\n" +
	"\blocktime\x18\x03 \x01(\x05R\blocktime\"M\n" +
	"\aTxInput\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\x05R\x04vout\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\tR\bsequence\"<\n" +
	"\bTxOutput\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"0\n" +
	"\x1cCreateRawTransactionResponse\x12\x10\n" +
	"\x03hex\x18\x01 \x01(\tR\x03hex\"\x8e\x01\n" +
	"\x11CreatePsbtRequest\x12,\n" +
	"\x06inputs\x18\x01 \x03(\v2\x14.multisig.v1.TxInputR\x06inputs\x12/\n" +
	"\aoutputs\x18\x02 \x03(\v2\x15.multisig.v1.TxOutputR\aoutputs\x12\x1a\n" +
	"\blocktime\x18\x03 \x01(\x05R\blocktime\"(\n" +
	"\x12CreatePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"\xce\x01\n" +
	"\x1dWalletCreateFundedPsbtRequest\x12,\n" +
	"\x06inputs\x18\x01 \x03(\v2\x14.multisig.v1.TxInputR\x06inputs\x12/\n" +
	"\aoutputs\x18\x02 \x03(\v2\x15.multisig.v1.TxOutputR\aoutputs\x12\x1a\n" +
	"\blocktime\x18\x03 \x01(\x05R\blocktime\x122\n" +
	"\aoptions\x18\x04 \x01(\v2\x18.multisig.v1.PsbtOptionsR\aoptions\"\x88\x03\n" +
	"\vPsbtOptions\x12)\n" +
	"\x10include_watching\x18\x01 \x01(\bR\x0fincludeWatching\x12'\n" +
	"\x0fchange_position\x18\x02 \x01(\bR\x0echangePosition\x12%\n" +
	"\x0echange_address\x18\x03 \x01(\x05R\rchangeAddress\x12%\n" +
	"\x0einclude_unsafe\x18\x04 \x01(\bR\rincludeUnsafe\x12\x19\n" +
	"\bmin_conf\x18\x05 \x01(\x05R\aminConf\x12\x19\n" +
	"\bmax_conf\x18\x06 \x01(\x05R\amaxConf\x129\n" +
	"\x19subtract_fee_from_outputs\x18\a \x01(\bR\x16subtractFeeFromOutputs\x12 \n" +
	"\vreplaceable\x18\b \x01(\bR\vreplaceable\x12\x1f\n" +
	"\vconf_target\x18\t \x01(\x05R\n" +
	"confTarget\x12#\n" +
	"\restimate_mode\x18\n" +
	" \x01(\tR\festimateMode\"o\n" +
	"\x1eWalletCreateFundedPsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\x12\x10\n" +
	"\x03fee\x18\x02 \x01(\x03R\x03fee\x12'\n" +
	"\x0fchange_position\x18\x03 \x01(\x05R\x0echangePosition\"'\n" +
	"\x11DecodePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"\xab\x01\n" +
	"\x12DecodePsbtResponse\x12\x0e\n" +
	"\x02tx\x18\x01 \x01(\tR\x02tx\x12\x18\n" +
	"\aunknown\x18\x02 \x01(\tR\aunknown\x12*\n" +
	"\x06inputs\x18\x03 \x03(\v2\x12.multisig.v1.InputR\x06inputs\x12-\n" +
	"\aoutputs\x18\x04 \x03(\v2\x13.multisig.v1.OutputR\aoutputs\x12\x10\n" +
	"\x03fee\x18\x05 \x01(\x05R\x03fee\"\x80\x03\n" +
	"\x05Input\x12(\n" +
	"\x10non_witness_utxo\x18\x01 \x01(\tR\x0enonWitnessUtxo\x12!\n" +
	"\fwitness_utxo\x18\x02 \x01(\tR\vwitnessUtxo\x12-\n" +
	"\x12partial_signatures\x18\x03 \x01(\tR\x11partialSignatures\x12\x18\n" +
	"\asighash\x18\x04 \x01(\tR\asighash\x12#\n" +
	"\rredeem_script\x18\x05 \x01(\tR\fredeemScript\x12%\n" +
	"\x0ewitness_script\x18\x06 \x01(\tR\rwitnessScript\x12!\n" +
	"\fbip32_derivs\x18\a \x01(\tR\vbip32Derivs\x12'\n" +
	"\x0ffinal_scriptsig\x18\b \x01(\tR\x0efinalScriptsig\x12/\n" +
	"\x13final_scriptwitness\x18\t \x01(\tR\x12finalScriptwitness\x12\x18\n" +
	"\aunknown\x18\n" +
	" \x01(\tR\aunknown\"\x91\x01\n" +
	"\x06Output\x12#\n" +
	"\rredeem_script\x18\x01 \x01(\tR\fredeemScript\x12%\n" +
	"\x0ewitness_script\x18\x02 \x01(\tR\rwitnessScript\x12!\n" +
	"\fbip32_derivs\x18\x03 \x01(\tR\vbip32Derivs\x12\x18\n" +
	"\aunknown\x18\x04 \x01(\tR\aunknown\"(\n" +
	"\x12AnalyzePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"i\n" +
	"\x13AnalyzePsbtResponse\x12\x16\n" +
	"\x06inputs\x18\x01 \x03(\tR\x06inputs\x12\x12\n" +
	"\x04next\x18\x02 \x01(\tR\x04next\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\tR\x03fee\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"e\n" +
	"\x18WalletProcessPsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\x12\x12\n" +
	"\x04sign\x18\x02 \x01(\bR\x04sign\x12!\n" +
	"\fsighash_type\x18\x03 \x01(\tR\vsighashType\"K\n" +
	"\x19WalletProcessPsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\x12\x1a\n" +
	"\bcomplete\x18\x02 \x01(\bR\bcomplete\"*\n" +
	"\x12CombinePsbtRequest\x12\x14\n" +
	"\x05psbts\x18\x01 \x03(\tR\x05psbts\")\n" +
	"\x13CombinePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\")\n" +
	"\x13FinalizePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"X\n" +
	"\x14FinalizePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\x12\x10\n" +
	"\x03hex\x18\x02 \x01(\tR\x03hex\x12\x1a\n" +
	"\bcomplete\x18\x03 \x01(\bR\bcomplete\"+\n" +
	"\x15UtxoUpdatePsbtRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\",\n" +
	"\x16UtxoUpdatePsbtResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"(\n" +
	"\x10JoinPsbtsRequest\x12\x14\n" +
	"\x05psbts\x18\x01 \x03(\tR\x05psbts\"'\n" +
	"\x11JoinPsbtsResponse\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"\x9b\x01\n" +
	"#SignRawTransactionWithWalletRequest\x12\x1d\n" +
	"\n" +
	"hex_string\x18\x01 \x01(\tR\thexString\x122\n" +
	"\bprev_txs\x18\x02 \x03(\v2\x17.multisig.v1.PreviousTxR\aprevTxs\x12!\n" +
	"\fsighash_type\x18\x03 \x01(\tR\vsighashType\"\xbe\x01\n" +
	"\n" +
	"PreviousTx\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\x05R\x04vout\x12$\n" +
	"\x0escript_pub_key\x18\x03 \x01(\tR\fscriptPubKey\x12#\n" +
	"\rredeem_script\x18\x04 \x01(\tR\fredeemScript\x12%\n" +
	"\x0ewitness_script\x18\x05 \x01(\tR\rwitnessScript\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\"\x80\x01\n" +
	"$SignRawTransactionWithWalletResponse\x12\x10\n" +
	"\x03hex\x18\x01 \x01(\tR\x03hex\x12\x1a\n" +
	"\bcomplete\x18\x02 \x01(\bR\bcomplete\x12*\n" +
	"\x06errors\x18\x03 \x03(\v2\x12.multisig.v1.ErrorR\x06errors\"\x80\x01\n" +
	"\x05Error\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\x05R\x04vout\x12\x1d\n" +
	"\n" +
	"script_sig\x18\x03 \x01(\tR\tscriptSig\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\tR\bsequence\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"\\\n" +
	"\x19SendRawTransactionRequest\x12\x1d\n" +
	"\n" +
	"hex_string\x18\x01 \x01(\tR\thexString\x12 \n" +
	"\fmax_fee_rate\x18\x02 \x01(\x01R\n" +
	"maxFeeRate\"0\n" +
	"\x1aSendRawTransactionResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\";\n" +
	"\x18TestMempoolAcceptRequest\x12\x1f\n" +
	"\vhex_strings\x18\x01 \x03(\tR\n" +
	"hexStrings\"n\n" +
	"\x19TestMempoolAcceptResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x18\n" +
	"\aallowed\x18\x02 \x01(\bR\aallowed\x12#\n" +
	"\rreject_reason\x18\x03 \x01(\tR\frejectReason\"X\n" +
	"\x15GetTransactionRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12+\n" +
	"\x11include_watchonly\x18\x02 \x01(\bR\x10includeWatchonly\"\x9e\x02\n" +
	"\x16GetTransactionResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12$\n" +
	"\rconfirmations\x18\x02 \x01(\x05R\rconfirmations\x12\x1d\n" +
	"\n" +
	"block_time\x18\x03 \x01(\x03R\tblockTime\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\tR\tblockHash\x12!\n" +
	"\fblock_height\x18\x05 \x01(\x05R\vblockHeight\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12\x10\n" +
	"\x03fee\x18\a \x01(\x03R\x03fee\x12\x10\n" +
	"\x03hex\x18\b \x01(\tR\x03hex\x12-\n" +
	"\adetails\x18\t \x03(\v2\x13.multisig.v1.DetailR\adetails\"\xb0\x01\n" +
	"\x06Detail\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12\x12\n" +
	"\x04vout\x18\x05 \x01(\x05R\x04vout\x12\x10\n" +
	"\x03fee\x18\x06 \x01(\x01R\x03fee\x12\x1c\n" +
	"\tabandoned\x18\a \x01(\bR\tabandoned2\x98\x0e\n" +
	"\x0fMultisigService\x12e\n" +
	"\x12AddMultisigAddress\x12&.multisig.v1.AddMultisigAddressRequest\x1a'.multisig.v1.AddMultisigAddressResponse\x12V\n" +
	"\rImportAddress\x12!.multisig.v1.ImportAddressRequest\x1a\".multisig.v1.ImportAddressResponse\x12Y\n" +
	"\x0eGetAddressInfo\x12\".multisig.v1.GetAddressInfoRequest\x1a#.multisig.v1.GetAddressInfoResponse\x12P\n" +
	"\vListUnspent\x12\x1f.multisig.v1.ListUnspentRequest\x1a .multisig.v1.ListUnspentResponse\x12k\n" +
	"\x14ListAddressGroupings\x12(.multisig.v1.ListAddressGroupingsRequest\x1a).multisig.v1.ListAddressGroupingsResponse\x12k\n" +
	"\x14CreateRawTransaction\x12(.multisig.v1.CreateRawTransactionRequest\x1a).multisig.v1.CreateRawTransactionResponse\x12M\n" +
	"\n" +
	"CreatePsbt\x12\x1e.multisig.v1.CreatePsbtRequest\x1a\x1f.multisig.v1.CreatePsbtResponse\x12q\n" +
	"\x16WalletCreateFundedPsbt\x12*.multisig.v1.WalletCreateFundedPsbtRequest\x1a+.multisig.v1.WalletCreateFundedPsbtResponse\x12M\n" +
	"\n" +
	"DecodePsbt\x12\x1e.multisig.v1.DecodePsbtRequest\x1a\x1f.multisig.v1.DecodePsbtResponse\x12P\n" +
	"\vAnalyzePsbt\x12\x1f.multisig.v1.AnalyzePsbtRequest\x1a .multisig.v1.AnalyzePsbtResponse\x12b\n" +
	"\x11WalletProcessPsbt\x12%.multisig.v1.WalletProcessPsbtRequest\x1a&.multisig.v1.WalletProcessPsbtResponse\x12P\n" +
	"\vCombinePsbt\x12\x1f.multisig.v1.CombinePsbtRequest\x1a .multisig.v1.CombinePsbtResponse\x12S\n" +
	"\fFinalizePsbt\x12 .multisig.v1.FinalizePsbtRequest\x1a!.multisig.v1.FinalizePsbtResponse\x12Y\n" +
	"\x0eUtxoUpdatePsbt\x12\".multisig.v1.UtxoUpdatePsbtRequest\x1a#.multisig.v1.UtxoUpdatePsbtResponse\x12J\n" +
	"\tJoinPsbts\x12\x1d.multisig.v1.JoinPsbtsRequest\x1a\x1e.multisig.v1.JoinPsbtsResponse\x12\x83\x01\n" +
	"\x1cSignRawTransactionWithWallet\x120.multisig.v1.SignRawTransactionWithWalletRequest\x1a1.multisig.v1.SignRawTransactionWithWalletResponse\x12e\n" +
	"\x12SendRawTransaction\x12&.multisig.v1.SendRawTransactionRequest\x1a'.multisig.v1.SendRawTransactionResponse\x12b\n" +
	"\x11TestMempoolAccept\x12%.multisig.v1.TestMempoolAcceptRequest\x1a&.multisig.v1.TestMempoolAcceptResponse\x12Y\n" +
	"\x0eGetTransaction\x12\".multisig.v1.GetTransactionRequest\x1a#.multisig.v1.GetTransactionResponseB\xbd\x01\n" +
	"\x0fcom.multisig.v1B\rMultisigProtoP\x01ZNgithub.com/LayerTwo-Labs/sidesail/servers/bitwindow/gen/multisig/v1;multisigv1\xa2\x02\x03MXX\xaa\x02\vMultisig.V1\xca\x02\vMultisig\\V1\xe2\x02\x17Multisig\\V1\\GPBMetadata\xea\x02\fMultisig::V1b\x06proto3"

var (
	file_multisig_v1_multisig_proto_rawDescOnce sync.Once
	file_multisig_v1_multisig_proto_rawDescData []byte
)

func file_multisig_v1_multisig_proto_rawDescGZIP() []byte {
	file_multisig_v1_multisig_proto_rawDescOnce.Do(func() {
		file_multisig_v1_multisig_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_multisig_v1_multisig_proto_rawDesc), len(file_multisig_v1_multisig_proto_rawDesc)))
	})
	return file_multisig_v1_multisig_proto_rawDescData
}

var file_multisig_v1_multisig_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_multisig_v1_multisig_proto_goTypes = []any{
	(*AddMultisigAddressRequest)(nil),            // 0: multisig.v1.AddMultisigAddressRequest
	(*AddMultisigAddressResponse)(nil),           // 1: multisig.v1.AddMultisigAddressResponse
	(*ImportAddressRequest)(nil),                 // 2: multisig.v1.ImportAddressRequest
	(*ImportAddressResponse)(nil),                // 3: multisig.v1.ImportAddressResponse
	(*GetAddressInfoRequest)(nil),                // 4: multisig.v1.GetAddressInfoRequest
	(*GetAddressInfoResponse)(nil),               // 5: multisig.v1.GetAddressInfoResponse
	(*ListUnspentRequest)(nil),                   // 6: multisig.v1.ListUnspentRequest
	(*ListUnspentResponse)(nil),                  // 7: multisig.v1.ListUnspentResponse
	(*Utxo)(nil),                                 // 8: multisig.v1.Utxo
	(*ListAddressGroupingsRequest)(nil),          // 9: multisig.v1.ListAddressGroupingsRequest
	(*ListAddressGroupingsResponse)(nil),         // 10: multisig.v1.ListAddressGroupingsResponse
	(*AddressGrouping)(nil),                      // 11: multisig.v1.AddressGrouping
	(*AddressInfo)(nil),                          // 12: multisig.v1.AddressInfo
	(*CreateRawTransactionRequest)(nil),          // 13: multisig.v1.CreateRawTransactionRequest
	(*TxInput)(nil),                              // 14: multisig.v1.TxInput
	(*TxOutput)(nil),                             // 15: multisig.v1.TxOutput
	(*CreateRawTransactionResponse)(nil),         // 16: multisig.v1.CreateRawTransactionResponse
	(*CreatePsbtRequest)(nil),                    // 17: multisig.v1.CreatePsbtRequest
	(*CreatePsbtResponse)(nil),                   // 18: multisig.v1.CreatePsbtResponse
	(*WalletCreateFundedPsbtRequest)(nil),        // 19: multisig.v1.WalletCreateFundedPsbtRequest
	(*PsbtOptions)(nil),                          // 20: multisig.v1.PsbtOptions
	(*WalletCreateFundedPsbtResponse)(nil),       // 21: multisig.v1.WalletCreateFundedPsbtResponse
	(*DecodePsbtRequest)(nil),                    // 22: multisig.v1.DecodePsbtRequest
	(*DecodePsbtResponse)(nil),                   // 23: multisig.v1.DecodePsbtResponse
	(*Input)(nil),                                // 24: multisig.v1.Input
	(*Output)(nil),                               // 25: multisig.v1.Output
	(*AnalyzePsbtRequest)(nil),                   // 26: multisig.v1.AnalyzePsbtRequest
	(*AnalyzePsbtResponse)(nil),                  // 27: multisig.v1.AnalyzePsbtResponse
	(*WalletProcessPsbtRequest)(nil),             // 28: multisig.v1.WalletProcessPsbtRequest
	(*WalletProcessPsbtResponse)(nil),            // 29: multisig.v1.WalletProcessPsbtResponse
	(*CombinePsbtRequest)(nil),                   // 30: multisig.v1.CombinePsbtRequest
	(*CombinePsbtResponse)(nil),                  // 31: multisig.v1.CombinePsbtResponse
	(*FinalizePsbtRequest)(nil),                  // 32: multisig.v1.FinalizePsbtRequest
	(*FinalizePsbtResponse)(nil),                 // 33: multisig.v1.FinalizePsbtResponse
	(*UtxoUpdatePsbtRequest)(nil),                // 34: multisig.v1.UtxoUpdatePsbtRequest
	(*UtxoUpdatePsbtResponse)(nil),               // 35: multisig.v1.UtxoUpdatePsbtResponse
	(*JoinPsbtsRequest)(nil),                     // 36: multisig.v1.JoinPsbtsRequest
	(*JoinPsbtsResponse)(nil),                    // 37: multisig.v1.JoinPsbtsResponse
	(*SignRawTransactionWithWalletRequest)(nil),  // 38: multisig.v1.SignRawTransactionWithWalletRequest
	(*PreviousTx)(nil),                           // 39: multisig.v1.PreviousTx
	(*SignRawTransactionWithWalletResponse)(nil), // 40: multisig.v1.SignRawTransactionWithWalletResponse
	(*Error)(nil),                                // 41: multisig.v1.Error
	(*SendRawTransactionRequest)(nil),            // 42: multisig.v1.SendRawTransactionRequest
	(*SendRawTransactionResponse)(nil),           // 43: multisig.v1.SendRawTransactionResponse
	(*TestMempoolAcceptRequest)(nil),             // 44: multisig.v1.TestMempoolAcceptRequest
	(*TestMempoolAcceptResponse)(nil),            // 45: multisig.v1.TestMempoolAcceptResponse
	(*GetTransactionRequest)(nil),                // 46: multisig.v1.GetTransactionRequest
	(*GetTransactionResponse)(nil),               // 47: multisig.v1.GetTransactionResponse
	(*Detail)(nil),                               // 48: multisig.v1.Detail
}
var file_multisig_v1_multisig_proto_depIdxs = []int32{
	8,  // 0: multisig.v1.ListUnspentResponse.utxos:type_name -> multisig.v1.Utxo
	11, // 1: multisig.v1.ListAddressGroupingsResponse.groupings:type_name -> multisig.v1.AddressGrouping
	12, // 2: multisig.v1.AddressGrouping.addresses:type_name -> multisig.v1.AddressInfo
	14, // 3: multisig.v1.CreateRawTransactionRequest.inputs:type_name -> multisig.v1.TxInput
	15, // 4: multisig.v1.CreateRawTransactionRequest.outputs:type_name -> multisig.v1.TxOutput
	14, // 5: multisig.v1.CreatePsbtRequest.inputs:type_name -> multisig.v1.TxInput
	15, // 6: multisig.v1.CreatePsbtRequest.outputs:type_name -> multisig.v1.TxOutput
	14, // 7: multisig.v1.WalletCreateFundedPsbtRequest.inputs:type_name -> multisig.v1.TxInput
	15, // 8: multisig.v1.WalletCreateFundedPsbtRequest.outputs:type_name -> multisig.v1.TxOutput
	20, // 9: multisig.v1.WalletCreateFundedPsbtRequest.options:type_name -> multisig.v1.PsbtOptions
	24, // 10: multisig.v1.DecodePsbtResponse.inputs:type_name -> multisig.v1.Input
	25, // 11: multisig.v1.DecodePsbtResponse.outputs:type_name -> multisig.v1.Output
	39, // 12: multisig.v1.SignRawTransactionWithWalletRequest.prev_txs:type_name -> multisig.v1.PreviousTx
	41, // 13: multisig.v1.SignRawTransactionWithWalletResponse.errors:type_name -> multisig.v1.Error
	48, // 14: multisig.v1.GetTransactionResponse.details:type_name -> multisig.v1.Detail
	0,  // 15: multisig.v1.MultisigService.AddMultisigAddress:input_type -> multisig.v1.AddMultisigAddressRequest
	2,  // 16: multisig.v1.MultisigService.ImportAddress:input_type -> multisig.v1.ImportAddressRequest
	4,  // 17: multisig.v1.MultisigService.GetAddressInfo:input_type -> multisig.v1.GetAddressInfoRequest
	6,  // 18: multisig.v1.MultisigService.ListUnspent:input_type -> multisig.v1.ListUnspentRequest
	9,  // 19: multisig.v1.MultisigService.ListAddressGroupings:input_type -> multisig.v1.ListAddressGroupingsRequest
	13, // 20: multisig.v1.MultisigService.CreateRawTransaction:input_type -> multisig.v1.CreateRawTransactionRequest
	17, // 21: multisig.v1.MultisigService.CreatePsbt:input_type -> multisig.v1.CreatePsbtRequest
	19, // 22: multisig.v1.MultisigService.WalletCreateFundedPsbt:input_type -> multisig.v1.WalletCreateFundedPsbtRequest
	22, // 23: multisig.v1.MultisigService.DecodePsbt:input_type -> multisig.v1.DecodePsbtRequest
	26, // 24: multisig.v1.MultisigService.AnalyzePsbt:input_type -> multisig.v1.AnalyzePsbtRequest
	28, // 25: multisig.v1.MultisigService.WalletProcessPsbt:input_type -> multisig.v1.WalletProcessPsbtRequest
	30, // 26: multisig.v1.MultisigService.CombinePsbt:input_type -> multisig.v1.CombinePsbtRequest
	32, // 27: multisig.v1.MultisigService.FinalizePsbt:input_type -> multisig.v1.FinalizePsbtRequest
	34, // 28: multisig.v1.MultisigService.UtxoUpdatePsbt:input_type -> multisig.v1.UtxoUpdatePsbtRequest
	36, // 29: multisig.v1.MultisigService.JoinPsbts:input_type -> multisig.v1.JoinPsbtsRequest
	38, // 30: multisig.v1.MultisigService.SignRawTransactionWithWallet:input_type -> multisig.v1.SignRawTransactionWithWalletRequest
	42, // 31: multisig.v1.MultisigService.SendRawTransaction:input_type -> multisig.v1.SendRawTransactionRequest
	44, // 32: multisig.v1.MultisigService.TestMempoolAccept:input_type -> multisig.v1.TestMempoolAcceptRequest
	46, // 33: multisig.v1.MultisigService.GetTransaction:input_type -> multisig.v1.GetTransactionRequest
	1,  // 34: multisig.v1.MultisigService.AddMultisigAddress:output_type -> multisig.v1.AddMultisigAddressResponse
	3,  // 35: multisig.v1.MultisigService.ImportAddress:output_type -> multisig.v1.ImportAddressResponse
	5,  // 36: multisig.v1.MultisigService.GetAddressInfo:output_type -> multisig.v1.GetAddressInfoResponse
	7,  // 37: multisig.v1.MultisigService.ListUnspent:output_type -> multisig.v1.ListUnspentResponse
	10, // 38: multisig.v1.MultisigService.ListAddressGroupings:output_type -> multisig.v1.ListAddressGroupingsResponse
	16, // 39: multisig.v1.MultisigService.CreateRawTransaction:output_type -> multisig.v1.CreateRawTransactionResponse
	18, // 40: multisig.v1.MultisigService.CreatePsbt:output_type -> multisig.v1.CreatePsbtResponse
	21, // 41: multisig.v1.MultisigService.WalletCreateFundedPsbt:output_type -> multisig.v1.WalletCreateFundedPsbtResponse
	23, // 42: multisig.v1.MultisigService.DecodePsbt:output_type -> multisig.v1.DecodePsbtResponse
	27, // 43: multisig.v1.MultisigService.AnalyzePsbt:output_type -> multisig.v1.AnalyzePsbtResponse
	29, // 44: multisig.v1.MultisigService.WalletProcessPsbt:output_type -> multisig.v1.WalletProcessPsbtResponse
	31, // 45: multisig.v1.MultisigService.CombinePsbt:output_type -> multisig.v1.CombinePsbtResponse
	33, // 46: multisig.v1.MultisigService.FinalizePsbt:output_type -> multisig.v1.FinalizePsbtResponse
	35, // 47: multisig.v1.MultisigService.UtxoUpdatePsbt:output_type -> multisig.v1.UtxoUpdatePsbtResponse
	37, // 48: multisig.v1.MultisigService.JoinPsbts:output_type -> multisig.v1.JoinPsbtsResponse
	40, // 49: multisig.v1.MultisigService.SignRawTransactionWithWallet:output_type -> multisig.v1.SignRawTransactionWithWalletResponse
	43, // 50: multisig.v1.MultisigService.SendRawTransaction:output_type -> multisig.v1.SendRawTransactionResponse
	45, // 51: multisig.v1.MultisigService.TestMempoolAccept:output_type -> multisig.v1.TestMempoolAcceptResponse
	47, // 52: multisig.v1.MultisigService.GetTransaction:output_type -> multisig.v1.GetTransactionResponse
	34, // [34:53] is the sub-list for method output_type
	15, // [15:34] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_multisig_v1_multisig_proto_init() }
func file_multisig_v1_multisig_proto_init() {
	if File_multisig_v1_multisig_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multisig_v1_multisig_proto_rawDesc), len(file_multisig_v1_multisig_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multisig_v1_multisig_proto_goTypes,
		DependencyIndexes: file_multisig_v1_multisig_proto_depIdxs,
		MessageInfos:      file_multisig_v1_multisig_proto_msgTypes,
	}.Build()
	File_multisig_v1_multisig_proto = out.File
	file_multisig_v1_multisig_proto_goTypes = nil
	file_multisig_v1_multisig_proto_depIdxs = nil
}
