// Common message types

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: cusf/mainchain/v1/common.proto

package mainchainv1

import (
	v1 "github.com/LayerTwo-Labs/sidesail/servers/bitwindow/gen/cusf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid *v1.ReverseHex          `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (x *OutPoint) Reset() {
	*x = OutPoint{}
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutPoint) ProtoMessage() {}

func (x *OutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutPoint.ProtoReflect.Descriptor instead.
func (*OutPoint) Descriptor() ([]byte, []int) {
	return file_cusf_mainchain_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *OutPoint) GetTxid() *v1.ReverseHex {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *OutPoint) GetVout() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Vout
	}
	return nil
}

type SidechainDeclaration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SidechainDeclaration:
	//
	//	*SidechainDeclaration_V0_
	SidechainDeclaration isSidechainDeclaration_SidechainDeclaration `protobuf_oneof:"sidechain_declaration"`
}

func (x *SidechainDeclaration) Reset() {
	*x = SidechainDeclaration{}
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SidechainDeclaration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidechainDeclaration) ProtoMessage() {}

func (x *SidechainDeclaration) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidechainDeclaration.ProtoReflect.Descriptor instead.
func (*SidechainDeclaration) Descriptor() ([]byte, []int) {
	return file_cusf_mainchain_v1_common_proto_rawDescGZIP(), []int{1}
}

func (m *SidechainDeclaration) GetSidechainDeclaration() isSidechainDeclaration_SidechainDeclaration {
	if m != nil {
		return m.SidechainDeclaration
	}
	return nil
}

func (x *SidechainDeclaration) GetV0() *SidechainDeclaration_V0 {
	if x, ok := x.GetSidechainDeclaration().(*SidechainDeclaration_V0_); ok {
		return x.V0
	}
	return nil
}

type isSidechainDeclaration_SidechainDeclaration interface {
	isSidechainDeclaration_SidechainDeclaration()
}

type SidechainDeclaration_V0_ struct {
	V0 *SidechainDeclaration_V0 `protobuf:"bytes,1,opt,name=v0,proto3,oneof"`
}

func (*SidechainDeclaration_V0_) isSidechainDeclaration_SidechainDeclaration() {}

type SidechainDeclaration_V0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	HashId_1    *v1.ConsensusHex        `protobuf:"bytes,3,opt,name=hash_id_1,json=hashId1,proto3" json:"hash_id_1,omitempty"`
	HashId_2    *v1.Hex                 `protobuf:"bytes,4,opt,name=hash_id_2,json=hashId2,proto3" json:"hash_id_2,omitempty"`
}

func (x *SidechainDeclaration_V0) Reset() {
	*x = SidechainDeclaration_V0{}
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SidechainDeclaration_V0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidechainDeclaration_V0) ProtoMessage() {}

func (x *SidechainDeclaration_V0) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_mainchain_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidechainDeclaration_V0.ProtoReflect.Descriptor instead.
func (*SidechainDeclaration_V0) Descriptor() ([]byte, []int) {
	return file_cusf_mainchain_v1_common_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SidechainDeclaration_V0) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *SidechainDeclaration_V0) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *SidechainDeclaration_V0) GetHashId_1() *v1.ConsensusHex {
	if x != nil {
		return x.HashId_1
	}
	return nil
}

func (x *SidechainDeclaration_V0) GetHashId_2() *v1.Hex {
	if x != nil {
		return x.HashId_2
	}
	return nil
}

var File_cusf_mainchain_v1_common_proto protoreflect.FileDescriptor

var file_cusf_mainchain_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6c, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x75, 0x73,
	0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x48, 0x65, 0x78, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04,
	0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x22, 0xd3,
	0x02, 0x0a, 0x14, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x63, 0x6c,
	0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x02, 0x76, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x30, 0x48,
	0x00, 0x52, 0x02, 0x76, 0x30, 0x1a, 0xe3, 0x01, 0x0a, 0x02, 0x56, 0x30, 0x12, 0x32, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48, 0x65,
	0x78, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x49, 0x64, 0x31, 0x12, 0x2f, 0x0a, 0x09, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x75, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x78, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x49, 0x64, 0x32, 0x42, 0x17, 0x0a, 0x15, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0xe1, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x75, 0x73,
	0x66, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x55, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x77, 0x6f, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x73, 0x61, 0x69, 0x6c,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x4d, 0x58, 0xaa, 0x02, 0x11, 0x43, 0x75, 0x73,
	0x66, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x11, 0x43, 0x75, 0x73, 0x66, 0x5c, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1d, 0x43, 0x75, 0x73, 0x66, 0x5c, 0x4d, 0x61, 0x69, 0x6e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x13, 0x43, 0x75, 0x73, 0x66, 0x3a, 0x3a, 0x4d, 0x61, 0x69, 0x6e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cusf_mainchain_v1_common_proto_rawDescOnce sync.Once
	file_cusf_mainchain_v1_common_proto_rawDescData = file_cusf_mainchain_v1_common_proto_rawDesc
)

func file_cusf_mainchain_v1_common_proto_rawDescGZIP() []byte {
	file_cusf_mainchain_v1_common_proto_rawDescOnce.Do(func() {
		file_cusf_mainchain_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_cusf_mainchain_v1_common_proto_rawDescData)
	})
	return file_cusf_mainchain_v1_common_proto_rawDescData
}

var file_cusf_mainchain_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cusf_mainchain_v1_common_proto_goTypes = []any{
	(*OutPoint)(nil),                // 0: cusf.mainchain.v1.OutPoint
	(*SidechainDeclaration)(nil),    // 1: cusf.mainchain.v1.SidechainDeclaration
	(*SidechainDeclaration_V0)(nil), // 2: cusf.mainchain.v1.SidechainDeclaration.V0
	(*v1.ReverseHex)(nil),           // 3: cusf.common.v1.ReverseHex
	(*wrapperspb.UInt32Value)(nil),  // 4: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil),  // 5: google.protobuf.StringValue
	(*v1.ConsensusHex)(nil),         // 6: cusf.common.v1.ConsensusHex
	(*v1.Hex)(nil),                  // 7: cusf.common.v1.Hex
}
var file_cusf_mainchain_v1_common_proto_depIdxs = []int32{
	3, // 0: cusf.mainchain.v1.OutPoint.txid:type_name -> cusf.common.v1.ReverseHex
	4, // 1: cusf.mainchain.v1.OutPoint.vout:type_name -> google.protobuf.UInt32Value
	2, // 2: cusf.mainchain.v1.SidechainDeclaration.v0:type_name -> cusf.mainchain.v1.SidechainDeclaration.V0
	5, // 3: cusf.mainchain.v1.SidechainDeclaration.V0.title:type_name -> google.protobuf.StringValue
	5, // 4: cusf.mainchain.v1.SidechainDeclaration.V0.description:type_name -> google.protobuf.StringValue
	6, // 5: cusf.mainchain.v1.SidechainDeclaration.V0.hash_id_1:type_name -> cusf.common.v1.ConsensusHex
	7, // 6: cusf.mainchain.v1.SidechainDeclaration.V0.hash_id_2:type_name -> cusf.common.v1.Hex
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_cusf_mainchain_v1_common_proto_init() }
func file_cusf_mainchain_v1_common_proto_init() {
	if File_cusf_mainchain_v1_common_proto != nil {
		return
	}
	file_cusf_mainchain_v1_common_proto_msgTypes[1].OneofWrappers = []any{
		(*SidechainDeclaration_V0_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cusf_mainchain_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cusf_mainchain_v1_common_proto_goTypes,
		DependencyIndexes: file_cusf_mainchain_v1_common_proto_depIdxs,
		MessageInfos:      file_cusf_mainchain_v1_common_proto_msgTypes,
	}.Build()
	File_cusf_mainchain_v1_common_proto = out.File
	file_cusf_mainchain_v1_common_proto_rawDesc = nil
	file_cusf_mainchain_v1_common_proto_goTypes = nil
	file_cusf_mainchain_v1_common_proto_depIdxs = nil
}
