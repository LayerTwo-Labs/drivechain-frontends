// Common message types

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: cusf/common/v1/common.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / Consensus-encoded hex.
// / Variable length data uses a length prefix.
type ConsensusHex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ConsensusHex) Reset() {
	*x = ConsensusHex{}
	mi := &file_cusf_common_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusHex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusHex) ProtoMessage() {}

func (x *ConsensusHex) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_common_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusHex.ProtoReflect.Descriptor instead.
func (*ConsensusHex) Descriptor() ([]byte, []int) {
	return file_cusf_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *ConsensusHex) GetHex() *wrapperspb.StringValue {
	if x != nil {
		return x.Hex
	}
	return nil
}

// / Hex encoding of byte arrays/vectors.
// / Length prefixes are not used.
type Hex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *Hex) Reset() {
	*x = Hex{}
	mi := &file_cusf_common_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hex) ProtoMessage() {}

func (x *Hex) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_common_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hex.ProtoReflect.Descriptor instead.
func (*Hex) Descriptor() ([]byte, []int) {
	return file_cusf_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *Hex) GetHex() *wrapperspb.StringValue {
	if x != nil {
		return x.Hex
	}
	return nil
}

// / Reverse consensus-encoded hex
type ReverseHex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hex *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ReverseHex) Reset() {
	*x = ReverseHex{}
	mi := &file_cusf_common_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseHex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseHex) ProtoMessage() {}

func (x *ReverseHex) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_common_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseHex.ProtoReflect.Descriptor instead.
func (*ReverseHex) Descriptor() ([]byte, []int) {
	return file_cusf_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *ReverseHex) GetHex() *wrapperspb.StringValue {
	if x != nil {
		return x.Hex
	}
	return nil
}

type SidechainDeclarationV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	HashId_1    *ConsensusHex           `protobuf:"bytes,3,opt,name=hash_id_1,json=hashId1,proto3" json:"hash_id_1,omitempty"`
	HashId_2    *ConsensusHex           `protobuf:"bytes,4,opt,name=hash_id_2,json=hashId2,proto3" json:"hash_id_2,omitempty"`
}

func (x *SidechainDeclarationV0) Reset() {
	*x = SidechainDeclarationV0{}
	mi := &file_cusf_common_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SidechainDeclarationV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidechainDeclarationV0) ProtoMessage() {}

func (x *SidechainDeclarationV0) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_common_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidechainDeclarationV0.ProtoReflect.Descriptor instead.
func (*SidechainDeclarationV0) Descriptor() ([]byte, []int) {
	return file_cusf_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *SidechainDeclarationV0) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *SidechainDeclarationV0) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *SidechainDeclarationV0) GetHashId_1() *ConsensusHex {
	if x != nil {
		return x.HashId_1
	}
	return nil
}

func (x *SidechainDeclarationV0) GetHashId_2() *ConsensusHex {
	if x != nil {
		return x.HashId_2
	}
	return nil
}

type SidechainDeclaration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Version:
	//
	//	*SidechainDeclaration_V0
	Version isSidechainDeclaration_Version `protobuf_oneof:"version"`
}

func (x *SidechainDeclaration) Reset() {
	*x = SidechainDeclaration{}
	mi := &file_cusf_common_v1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SidechainDeclaration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidechainDeclaration) ProtoMessage() {}

func (x *SidechainDeclaration) ProtoReflect() protoreflect.Message {
	mi := &file_cusf_common_v1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidechainDeclaration.ProtoReflect.Descriptor instead.
func (*SidechainDeclaration) Descriptor() ([]byte, []int) {
	return file_cusf_common_v1_common_proto_rawDescGZIP(), []int{4}
}

func (m *SidechainDeclaration) GetVersion() isSidechainDeclaration_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (x *SidechainDeclaration) GetV0() *SidechainDeclarationV0 {
	if x, ok := x.GetVersion().(*SidechainDeclaration_V0); ok {
		return x.V0
	}
	return nil
}

type isSidechainDeclaration_Version interface {
	isSidechainDeclaration_Version()
}

type SidechainDeclaration_V0 struct {
	V0 *SidechainDeclarationV0 `protobuf:"bytes,1,opt,name=v0,proto3,oneof"`
}

func (*SidechainDeclaration_V0) isSidechainDeclaration_Version() {}

var File_cusf_common_v1_common_proto protoreflect.FileDescriptor

var file_cusf_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63,
	0x75, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48, 0x65, 0x78, 0x12, 0x2e, 0x0a,
	0x03, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x68, 0x65, 0x78, 0x22, 0x35, 0x0a,
	0x03, 0x48, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x68, 0x65, 0x78, 0x22, 0x3c, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48,
	0x65, 0x78, 0x12, 0x2e, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x68,
	0x65, 0x78, 0x22, 0x80, 0x02, 0x0a, 0x16, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x12, 0x32, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48,
	0x65, 0x78, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x49, 0x64, 0x31, 0x12, 0x38, 0x0a, 0x09, 0x68,
	0x61, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48, 0x65, 0x78, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x68, 0x49, 0x64, 0x32, 0x22, 0x5b, 0x0a, 0x14, 0x53, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x02, 0x76, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x75, 0x73, 0x66,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x30, 0x48, 0x00, 0x52, 0x02, 0x76, 0x30, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0xcc, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x75, 0x73, 0x66, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x2d, 0x4c, 0x61,
	0x62, 0x73, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x73, 0x61, 0x69, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x2f, 0x62, 0x69, 0x74, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x75, 0x73, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x43, 0x58, 0xaa,
	0x02, 0x0e, 0x43, 0x75, 0x73, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0e, 0x43, 0x75, 0x73, 0x66, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x1a, 0x43, 0x75, 0x73, 0x66, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x10, 0x43, 0x75, 0x73, 0x66, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cusf_common_v1_common_proto_rawDescOnce sync.Once
	file_cusf_common_v1_common_proto_rawDescData = file_cusf_common_v1_common_proto_rawDesc
)

func file_cusf_common_v1_common_proto_rawDescGZIP() []byte {
	file_cusf_common_v1_common_proto_rawDescOnce.Do(func() {
		file_cusf_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_cusf_common_v1_common_proto_rawDescData)
	})
	return file_cusf_common_v1_common_proto_rawDescData
}

var file_cusf_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cusf_common_v1_common_proto_goTypes = []any{
	(*ConsensusHex)(nil),           // 0: cusf.common.v1.ConsensusHex
	(*Hex)(nil),                    // 1: cusf.common.v1.Hex
	(*ReverseHex)(nil),             // 2: cusf.common.v1.ReverseHex
	(*SidechainDeclarationV0)(nil), // 3: cusf.common.v1.SidechainDeclarationV0
	(*SidechainDeclaration)(nil),   // 4: cusf.common.v1.SidechainDeclaration
	(*wrapperspb.StringValue)(nil), // 5: google.protobuf.StringValue
}
var file_cusf_common_v1_common_proto_depIdxs = []int32{
	5, // 0: cusf.common.v1.ConsensusHex.hex:type_name -> google.protobuf.StringValue
	5, // 1: cusf.common.v1.Hex.hex:type_name -> google.protobuf.StringValue
	5, // 2: cusf.common.v1.ReverseHex.hex:type_name -> google.protobuf.StringValue
	5, // 3: cusf.common.v1.SidechainDeclarationV0.title:type_name -> google.protobuf.StringValue
	5, // 4: cusf.common.v1.SidechainDeclarationV0.description:type_name -> google.protobuf.StringValue
	0, // 5: cusf.common.v1.SidechainDeclarationV0.hash_id_1:type_name -> cusf.common.v1.ConsensusHex
	0, // 6: cusf.common.v1.SidechainDeclarationV0.hash_id_2:type_name -> cusf.common.v1.ConsensusHex
	3, // 7: cusf.common.v1.SidechainDeclaration.v0:type_name -> cusf.common.v1.SidechainDeclarationV0
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_cusf_common_v1_common_proto_init() }
func file_cusf_common_v1_common_proto_init() {
	if File_cusf_common_v1_common_proto != nil {
		return
	}
	file_cusf_common_v1_common_proto_msgTypes[4].OneofWrappers = []any{
		(*SidechainDeclaration_V0)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cusf_common_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cusf_common_v1_common_proto_goTypes,
		DependencyIndexes: file_cusf_common_v1_common_proto_depIdxs,
		MessageInfos:      file_cusf_common_v1_common_proto_msgTypes,
	}.Build()
	File_cusf_common_v1_common_proto = out.File
	file_cusf_common_v1_common_proto_rawDesc = nil
	file_cusf_common_v1_common_proto_goTypes = nil
	file_cusf_common_v1_common_proto_depIdxs = nil
}
